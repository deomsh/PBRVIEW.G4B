!BAT
#-#+ PBRVIEW.G4B v0.4.1 (20250913), by deomsh
#-# View Partition Boot Record (FAT12/FAT16/FAT32/NTFS/exFAT)
if "%~1"=="" && echo Use:  PBRVIEW.G4B [--start=N|--skip=n|--force=N] DEVICE|DISK|FILE [/PQ|/MS|/JL|/BLUE] && echo Help: PBRVIEW.G4B /?|--?|? && echo example 1: PBRVIEW.G4B (hd0,0) && echo example 2: PBRVIEW.G4B --start=63 (hd0) && echo example 3: PBRVIEW.G4B (hd0,0)/file.img /MS && echo example 4: PBRVIEW.G4B --force=63 (hd0,0)/Long\ File\ Name\ \=\ Image.IMG /JL && echo example 5: PBRVIEW.G4B (0xe0)0x567+1 && goto :eof
if not "%~1"=="/?" if not "%~1"=="--?" if not "%~1"=="?" || goto :help
if exist @uefi && graphicsmode > nul &; if %@retval%<=0xFF && echo Textmode of grub4efi not supported && goto :eof
setlocal && set *
debug status > nul ;; set /a debugsts=%@retval% > nul
debug 1
pager status > nul ;; set /a pagersts=%@retval% > nul
debug msg=0
pager off
set "rootorg=%@root%" &; if not exist @uefi && if "%rootorg:~0,3%"=="(cd" && set /A drvnum=*0x82A0&0xff > nul &; if "%rootorg:~3,1%"==")" && set "rootorg=(%drvnum%)%rootorg:~4%" ! set "rootorg=(%drvnum%)%rootorg:~5%"
errorcheck off
if /i "%~1"=="--start" && set /a "startsec=%~2" && shift && shift
if not exist startsec && if /i "%~1"=="--skip" &; set /A "startbyt=%~2" && shift && shift
if not exist startsec && if not exist startbyt &; if /i "%~1"=="--force" && set /a "forcesec=%~2" && shift && shift
if not /i "%~1"=="--start" if not /i "%~1"=="--skip" if not /i "%~1"=="--force" || echo Wrong use of switches && set result=0 && goto :eov
set DEVICE=%~d1 &; if exist @uefi && if %DEVICE:~0,4==(rd, echo Partitioned ram-disk not supported in grub4efi && set result=0 && goto :eof
if "%DEVICE%"=="%~1" && if not "%DEVICE:~0,3%"=="(fd" && if not "%DEVICE:~0,3%"=="(hd" && if not "%DEVICE:~0,3%"=="(rd" &; if %DEVICE:~1,-1%>=0x9F && set CDROM=Y
if not %CDROM%==Y &; if not "%~1"=="(cd)" if not "%~1"=="(cd0)" if not "%~1"=="(cd1)" if not "%~1"=="(cd2)" if not "%~1"=="(cd3)" if not "%~1"=="(cd,0)" if not "%~1"=="(cd,1)" if not "%~1"=="(cd,2)" if not "%~1"=="(cd,3)" |; set CDROM=Y
set "file=%~nx1" && set "name=%~n1" && set /u "ext=%~x1" &; if exist file &; call Fn.11 "%~1" "/" && set "file=%~f1" ! call Fn.11 "%file%" "+" && if not exist ext && set file=%DEVICE%%%file% && set BLOCK=%DEVICE%%%file% ! set file=
if not exist file && set ARG1=%~1 &; raw cat --hex --length=1 %ARG1%%0+1 > nul || echo Target '%~1' does not exist && goto :eov ! set ARG1=
if exist file && call Fn.11 "%file%" "\ " && echo -e "%file%" | set file= &; set "file=%file:~1,-1%" &; call :lsspaces "%file%" "\x20" &; echo -n > (md)0x300+1
if exist file && call Fn.11 "%file%" "=" && call :lsspaces "%file%" "\x3D" &; echo -n > (md)0x300+1
if exist file && if not exist %file% && echo Abort: '%file%' does not exist && goto :eov
if exist file &; raw cat --length=0 %file% && set /a filesize=*0x8290 ! echo File '%file%' is zero byte && set result=0 && goto :eov
if exist file && if %ext%==.ISO && set CDROM=Y
set ARG2=%~2 && set ARG3=%~3
if not /i "%ARG2%"=="/pq" if not /i "%ARG2%"=="/p" if not /i "%ARG3%"=="/pq" if not /i "%ARG3%"=="/p" || set /u format=PQ && set col1=$[0x3F] && set col2=$[0x78] && set col3=$[0x3F] && set col4=$[0xF8]
if not /i "%ARG2%"=="/ms" if not /i "%ARG2%"=="/m" if not /i "%ARG3%"=="/ms" if not /i "%ARG3%"=="/m" || set /u format=MS && set col1=$[0x0F] && set col2=$[0x08] && set col3=$[0x07] && set col4=$[0x07]
#CYAN#if not /i "%ARG2%"=="/jl" if not /i "%ARG3%"=="/jl" || set /u format=JL && set col1=$[0xBF] && set col2=$[0x78] && set col3=$[0xBF] && set col4=$[0xF8]
if not /i "%ARG2%"=="/jl" if not /i "%ARG2%"=="/j" if not /i "%ARG3%"=="/jl" if not /i "%ARG3%"=="/j" || set /u format=JL && set col1=$[0x9F] && set col2=$[0x78] && set col3=$[0x9F] && set col4=$[0xF8]
if not /i "%ARG2%"=="/blue" if not /i "%ARG2%"=="/blu" if not /i "%ARG2%"=="/bl" if not /i "%ARG2%"=="/b" |; if not exist format && set format=DEF && set col1=$[0x17] && set col2=$[0x91] && set col3=$[0x17] && set col4=$[0x90] && set col5=$[0x19]
#UGLY#if not /i "%ARG2%"=="/red" if not /i "%ARG2%"=="/re" if not /i "%ARG2%"=="/r" |; if not exist format && set format=DEF && set col1=$[0xE7] && set col2=$[0x9E] && set col3=$[0xE7] && set col4=$[0x90] && set col5=$[0xE9]
if not exist format && set format=DEF && set col1=$[0x8F] && set col2=$[0x78] && set col3=$[0x8F] && set col4=$[0x70] && set col5=$[0x87]
set ARG2= && set ARG3=
if exist BLOCK &; raw cat --hex --skip=511 --length=1 %BLOCK% > nul || echo FILE '%BLOCK%' is not valid && set result=0 && goto :eov ! set source=%BLOCK% && set file=
if exist file &; raw cat --hex --skip=511 --length=1 %file% > nul || echo FILE '%file%' is not valid && set result=0 && goto :eov ! set "source=%file%" && set BLOCK=
if not exist file && if not exist BLOCK && if not "%~1"=="(rd)" && if not %CDROM%==Y &; rootnoverify %~1 > nul && set /A filesec=*0x82B0 && set /A basesec=*0x82A8&0xffffffff && set /A filesize=*0x82B0*0x200 ! set filesec=0x2000 &; root %rootorg% > nul && set rootorg=
if not exist file && if not exist BLOCK && if not "%~1"=="(rd)" && if %CDROM%==Y && if exist @uefi &; rootnoverify %~1 > nul && set /A filesec=*0x82B0 && set /A filesize=*0x82B0*0x200 ! set filesec=0x2000 &; root %rootorg% > nul && set rootorg=
if not exist file && if not exist BLOCK && if not "%~1"=="(rd)" && if %CDROM%==Y && if not exist @uefi &; setlocal && set device=%DEVICE% && set /A diffsec=300m/2k &; set CDtotsec=%diffsec% && set diff2sec=%diffsec% && call :getCDtotsec &; if not exist CDtotsec && endlocal && set filesec=0x2000 ! endlocal && set filesec=%CDtotsec%
if not exist file && if not exist BLOCK && if "%~1"=="(rd)" &; set /A filesize=*0x82D8 &; set /A filesec=%filesize%>>9
if not exist forcesec &; if not exist startsec if not exist startbyt |; if "%DEVICE:~0,3%"=="(fd" &; if exist startsec && set source=%DEVICE%%%startsec%+%filesec% && set skipbyt=0 && set start=%startsec% && set startsec= ! set source=%DEVICE%%0+%filesec% && set start=0 && set skipbyt=0 &; set block=Y && set /a filesize=%filesec% * 0x200 && set filesec=
if not exist forcesec && if not exist file && if not exist BLOCK &; if not "%DEVICE:~0,3%"=="(hd" if not "%DEVICE:~0,3%"=="(rd" |; call Fn.11 "%DEVICE%" "," |; if exist startsec && set source=%DEVICE%%0+%filesec% && set block=Y && set start=%startsec% && set /a filesize=%filesec% * 0x200 && set filesec= ! set source=%DEVICE%%0+%filesec% && set block=Y && set start=0 && set skipbyt=0 && set /a filesize=%filesec% * 0x200 && set filesec=
if not exist forcesec &; if not exist startsec if not exist startbyt |; if "%DEVICE:~0,3%"=="(fd" &; if exist startsec && set source=%DEVICE%%0+%filesec% && set start=%startsec% ! set source=%DEVICE%%0+%filesec% && set start=0 && set skipbyt=0 &; set block=Y && set /a filesize=%filesec% * 0x200 && set filesec=
if not exist forcesec && if not exist file && if not exist BLOCK && if %CDROM%==Y &; if exist startsec && set source=%DEVICE%%0+%filesec% && set start=%startsec% && set /a filesize=%filesec% * 2k ! set source=%DEVICE%%0+%filesec% && set start=0 && set skipbyt=0 && set /a filesize=%filesec% * 2k &; set block=Y && set filesec=
if not exist forcesec &; if not exist file if not exist BLOCK if not exist block |; call :searchEBxx90 &; if not exist result && goto :eov ! if not exist file && if %start%==0 && if %result%==0 && set base=%result% && set result= && set BLOCK= ! set base=%result% && set result=
if not %block%==Y &; if "%DEVICE%"=="%~1" &; if exist startsec && set start=%startsec% ! if exist startbyt && set /A start=%startbyt%/0x200 ! if exist forcesec && set start=%forcesec% ! set start=0 &; raw cat --hex --skip=511 --length=1 %DEVICE%%%start%+1 > nul || echo Device %DEVICE%%%start%+1 is not valid && set result=0 && goto :eov ! set source=%DEVICE%%%start%+1 && set startsec= && set startbyt= && set file= && set BLOCK= && set basesec=%start%
if not exist source && if "%DEVICE:~0,3%"=="(fd" && set "ARG=%~1" &; if %DEVICE:~3,-1%==%ARG:~1,-1% && if %ARG:~1,-1%<=0x7E &; if exist startsec && set start=%startsec% ! if exist startbyt && set /A start=%startbyt%/0x200 ! if exist forcesec && set start=%forcesec% ! set start=0 &; raw cat --hex --skip=511 --length=1 %DEVICE%%%start%+1 > nul || echo Device %DEVICE%%%start%+1 is not valid && set result=0 && goto :eov ! set source=%DEVICE%%%start%+1 && set startsec= && set startbyt= && set file= && set BLOCK= && set basesec=%start%
if exist forcesec &; if not exist file if not exist BLOCK |; if not %CDROM%==Y && set /A base=%forcesec% * 0x200 && set force=%forcesec% ! set /A base=%forcesec% * 2k &; set /a force=%forcesec% * 4
if not exist base && set base=0 ! set /A base=%base%
set startsec= && set filesec=
if not exist source && echo Abort: %~1 not found && set result=0 && goto :eof
errorcheck off
set /A address=%base%+0 &; call :read %address% %source% ;; set /A jumph=%result%&0xffffff &; set jumph=000000%jumph:~2% &; set jumph=0x%jumph:~-6,6% &; set "jump=%jumph:~-2,2%%%jumph:~-4,2%%%jumph:~-6,2%"
if %jumph%==0x904CEB && set /A address=%base%+14 &; cat --skip=%base% --locatei=FAT --length=0x5B %source% > nul && set pbrtype=FAT
if %jumph%==0x9058EB && set /A address=%base%+14 &; cat --skip=%base% --locatei=FAT --length=0x5B %source% > nul && set pbrtype=FAT32
if %jumph%==0x903CEB && set /A address=%base%+14 &; cat --skip=%base% --locatei=FAT --length=0x5B %source% > nul && set pbrtype=FAT
if %jumph%==0x903EEB && set /A address=%base%+14 &; cat --skip=%base% --locatei=FAT --length=0x5B %source% > nul && set pbrtype=FAT
if %jumph%==0x90FEEB && set /A address=%base%+14 &; cat --skip=%base% --locatei=FAT --length=0x5B %source% > nul && set pbrtype=FAT
if %jumph%==0x9052EB && raw cat --skip=%address% --locate=NTFS\x20\x20\x20\x20 --length=8 %source% > nul && set pbrtype=NTFS
if %jumph%==0x9076EB && set /A address=%base%+3 &; raw cat --skip=%address% --locate=EXFAT\x20\x20\x20 --length=8 %source% > nul && set pbrtype=exFAT
if not exist pbrtype && set /A address=%base%+14 &; cat --skip=%address% --locatei=FAT --length=0x5B %source% > nul && set pbrtype=FAT
if %pbrtype:~0,3%==FAT && set /A address=%base%+0x26 &; call :read %address% %source% &; set /A result=%result%&0xff &; if not %result%==0x28 if not %result%==0x29 || set EBPB=MSDOS40
if %pbrtype:~0,3%==FAT && if not exist EBPB && set /A address=%base%+0x42 &; call :read %address% %source% &; set /A result=%result%&0xff &; if not %result%==0x28 if not %result%==0x29 || set EBPB=MSDOS70
if not exist pbrtype && set /A address=%base%+3 &; raw cat --skip=%address% --locate=NTFS\x20\x20\x20\x20 --length=8 %source% > nul && set pbrtype=NTFS
if not exist pbrtype && set /A address=%base%+3 &; raw cat --skip=%address% --locate=EXFAT\x20\x20\x20 --length=8 %source% > nul && set pbrtype=exFAT
if not %pbrtype%==exFAT && set /A address=%base%+0xB &; call :read %address% %source% &; if %result%==0 && set pbrtype= ! set result=
if not exist pbrtype &; call :Fn.4 &; call :Fn.5 0 %v% &; echo -e -n \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && call Fn.5 0 %v%
#BAD#if not exist pbrtype &; call :Fn.5 0 %v% &; echo -e -n \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && call Fn.5 0 %v%
if not exist pbrtype &; if %CDROM%==Y && set bytepsec=2k ! set bytepsec=512 &; if exist BLOCK && set source=%BLOCK% ! set source=%source% &; if exist forcesec && set /A base=%forcesec% * %bytepsec% ! if %base%==0 && set base=%base% ! if exist startbyt && set base=%startbyt% ! if exist start && set /A base=%start% * %bytepsec% ! set base=%base% &; if %base%==0 && if "%DEVICE%"=="%~1" && echo Device %DEVICE% has no FAT/FAT32/NTFS/exFAT Partition Boot Record found && goto :eov ! if %base%==0 && echo %source% & skip=%base%: No FAT/FAT32/NTFS/exFAT Partition Boot Record found && goto :eov ! if exist forcesec && echo %source%: no FAT/FAT32/NTFS/exFAT Partition Boot Record found && goto :eov ! echo %source% & skip=%base%: no FAT/FAT32/NTFS/exFAT Partition Boot Record found && goto :eov
#ORG#if not exist pbrtype &; if %CDROM%==Y && set bytepsec=2k ! set bytepsec=512 &; if exist BLOCK && set source=%BLOCK% ! set source=%source% &; if exist forcesec && set /A base=%forcesec% * %bytepsec% ! if %base%==0 && set base=%base% ! if exist startbyt && set base=%startbyt% ! if exist start && set /A base=%start% * %bytepsec% ! set base=%base% &; if %base%==0 && if "%DEVICE%"=="%~1" && echo Device %DEVICE% has no FAT/FAT32/NTFS/exFAT Partition Boot Record && goto :eov ! if %base%==0 && echo %source% & skip=%base%: No FAT/FAT32/NTFS/exFAT Partition Boot Record && goto :eov ! if exist forcesec && echo %source%: no FAT/FAT32/NTFS/exFAT Partition Boot Record && goto :eov ! echo %source% & skip=%base%: no FAT/FAT32/NTFS/exFAT Partition Boot Record && goto :eov
set skipbyt= && set v= && set h=
clear
#-# Pre-write colored lines (max 79 spaces!) - see notes in sub-routine :EchoColor
if %format%==DEF && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 22 %col3% %col4% 0
if %format%==MS && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 22 %col3% %col4% 0
if %format%==PQ && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 22 %col3% %col4% 0
if %format%==JL && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 22 %col3% %col4% 0
if %pbrtype:~0,3%==FAT && echo -n && call Fn.5 0 1
if not %pbrtype:~0,3%==FAT &; if not %CDROM%==Y &; if not exist file && if not exist BLOCK && if not exist block &; if %base%==0 && set /a skip=%start% ! set /A skip=%base%
if not %pbrtype:~0,3%==FAT &; if %CDROM%==Y &; if not exist file && if not exist BLOCK && if not exist block &; if %base%==0 && set /a skip=%start% ! set /A skip=%base%
if not %pbrtype:~0,3%==FAT &; if not %CDROM%==Y &; if not exist file if not exist BLOCK || set /A skip=%base%
if not %pbrtype:~0,3%==FAT &; if %CDROM%==Y &; if not exist file if not exist BLOCK || set /A skip=%base%
if not %pbrtype:~0,3%==FAT &; if not %CDROM%==Y &; if exist block &; set /a skip=%base%/0x200
if not %pbrtype:~0,3%==FAT &; if %CDROM%==Y &; if exist block &; calc %base% % 2k || set /a skip=%base%/2k ! set /a skip=%base%/0x200
if exist forcesec && set skip=%forcesec% && set forcesec=
if not %CDROM%==Y && if not exist file && if not exist BLOCK && if not %pbrtype:~0,3%==FAT &; echo -e -n %pbrtype% Partition Boot Record %DEVICE% sector %skip% | set header1= &; echo -e %col1%%%header1%
if %CDROM%==Y && if not exist file && if not exist BLOCK && if not %pbrtype:~0,3%==FAT &; calc %base% % 2k |; echo -e -n %pbrtype% Partition Boot Record %DEVICE% sector %skip% | set header1= &; echo -e %col1%%%header1%
if not exist header1 && if %CDROM%==Y && if not exist file && if not exist BLOCK && if not %pbrtype:~0,3%==FAT &; calc %base% % 2k && set /A skip=%base% &; echo -e -n %pbrtype% Partition Boot Record %DEVICE% offset %skip% | set header1= &; echo -e %col1%%%header1%
if exist file && if not %pbrtype:~0,3%==FAT && echo -e "%source%" | set echosrc= &; set "echosrc=%echosrc:~1,-1%" &; set /a srclen=%@retval%
if exist file && if not %pbrtype:~0,3%==FAT &; if %srclen%<=35 && echo -e -n %pbrtype% Partition Boot Record %source% offset %skip% | set header1= &; echo -e %col1%%%header1% && set echosrc= && set srclen=
if exist file && if not %pbrtype:~0,3%==FAT &; if not %srclen%<=35 && echo -e -n %pbrtype% Partition Boot Record %echosrc:~0,27%\x2E\x2E\x2E%echosrc:~-5,5% offset %skip% | set header1= &; echo -e %col1%%%header1% && set echosrc= && set srclen=
if exist BLOCK && if not %pbrtype:~0,3%==FAT &; echo -e -n %pbrtype% Partition Boot Record %BLOCK% offset %skip% | set header1= &; echo -e %col1%%%header1%
if %pbrtype%==exFAT && goto :EXFATSpecific
if %format%==DEF && echo -e entry \t\tvalue \t\x20\x20(hex)\t\toffset  (hex)\tbyte(s) notes | set header2= &; echo %col2%%%header2%
if %format%==PQ && echo -e entry (%format%) \t\tvalue \t\x20\x20(hex) \toffset \t(hex) \tbyte(s)\x20\x20\x20\x20\x20\x20\x20\x20 | set header2= &; echo %col2%%%header2%
if %format%==JL && echo -e entry (%format%)\t\x20value\t\x20\x20\x20(hex)\t offset\t (hex)\t byte(s)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 | set header2= &; echo %col2%%%header2%
if %format%==MS && echo -e entry (%format%) \tvalue \t\x20\x20(hex) \toffset \t(hex) \tbyte(s) | set header2= &; echo $[0x08]%header2%
if %format%==DEF && echo -e %col3%jump \t\t%jump% \x20\x20\x20%jumph% \t  0\t0x0\t 3
if %format%==PQ && echo -e %col3%Jump \t\t\t%jump% \x20\x20\x20%jumph% \t0 \t0x0 \t3
if %format%==MS && echo -e BS_jmpBoot \t%jump% \x20\x20\x20%jumph% \t0 \t0x0 \t3
if %format%==JL && echo -e %col3%Jump_Bytes\t %jump%\t\x20\x20\x20%jumph%\t 0\t 0x0\t 3
setlocal
set /A address=%base%+3 &; raw cat --skip=%address% --length=8 %source% | set oemname= &; if not exist oemname && set "oemname=N/A     "
if %format%==DEF && echo -e %col4%oemname \t%oemname% \t\t  3\t0x3 \t 8
if %format%==PQ && echo -e %col4%OEM name \t\t%oemname% \t\t3 \t0x3 \t8
if %format%==MS && echo -e BS_OEMName \t%oemname% \t\t3 \t0x3 \t8
if %format%==JL && echo -e %col4%OEM_String\t %oemname%\t\t 3\t 0x3\t 8
set /A address=%base%+0xB &; call :read %address% %source% ;; set /A bytpsech=%result%&0xffff &; set /a bytpsec=%bytpsech%
if %format%==DEF && echo -e %col3%bytes/sector \t%bytpsec% \t\x20\x20%bytpsech%\t\t 11\t0xB \t 2
if %format%==DEF && if not %base%==0 &; if %basesec%==0 && set /a basesec=%base%/%bytpsec% ! if not exist basesec && set /a basesec=%base%/%bytpsec%
if %format%==PQ && echo -e %col3%Bytes per Sector \t%bytpsec% \t\x20\x20%bytpsech% \t11 \t0xB \t2
if %format%==MS && echo -e BPB_BytsPerSec \t%bytpsec% \t\x20\x20%bytpsech% \t11 \t0xB \t2
if %format%==JL && echo -e %col3%Bytes/Sector\t %bytpsec%\t\x20\x20\x20%bytpsech%\t 11\t 0xB\t 2
set /A address=%base%+0xD &; call :read %address% %source% ;; set /A secclush=%result%&0xff &; set /a secpclus=%secclush%
if %format%==DEF && echo -e %col4%sectors/cluster\x20%secpclus% \t\x20\x20%secclush%\t\t 13\t0xD \t 1%col2%\tpower of 2\x20>\x200
#ORG#if %format%==DEF && echo -e %col4%sectors/cluster\x20%secpclus% \t\x20\x20%secclush%\t\t 13\t0xD \t 1$[0x78]\tpower of 2\x20>\x200
if %format%==PQ && echo -e %col4%Sectors per Cluster \t%secpclus% \t\x20\x20%secclush% \t\t13 \t0xD \t1
if %format%==MS && echo -e BPB_SecPerClus \t%secpclus% \t\x20\x20%secclush% \t\t13 \t0xD \t1
if %format%==JL && echo -e %col4%Sectors/Cluster\t %secpclus%\t\x20\x20\x20%secclush%\t\t 13\t 0xD\t 1
set /A address=%base%+0xE &; call :read %address% %source% ;; set /A rsvrdh=%result%&0xffff &; set /a reserved=%rsvrdh% &; set rsvdsect=%reserved%
if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%reservd sectors\x20%reserved% \t\x20\x20%rsvrdh% \t\t 14\t0xE \t 2\t%col5%count
#ORG#if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%reservd sectors\x20%reserved% \t\x20\x20%rsvrdh% \t\t 14\t0xE \t 2\t$[0x87]count
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%reservd sectors\x20%reserved% \t\x20\x20%rsvrdh% \t\t 14\t0xE \t 2\t%col5%must be zero
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%reservd sectors\x20%reserved% \t\x20\x20%rsvrdh% \t\t 14\t0xE \t 2\t$[0x87]must be zero
if %format%==PQ && echo -e %col3%Reserved Sectors \t%reserved% \t\x20\x20%rsvrdh% \t\t14 \t0x0E \t2
if %format%==MS && echo -e BPB_RsvdSecCnt \t%reserved% \t\x20\x20%rsvrdh% \t\t14 \t0xE \t2
if %format%==JL && echo -e %col3%Reserved_Sectors %reserved%\t\x20\x20\x20%rsvrdh%\t\t 14\t 0xE\t 2
set /A address=%base%+0x10 &; call :read %address% %source% ;; set /A numfath=%result%&0xff &; set /a numfat=%numfath%
if %format%==PQ && echo -e %col4%Number of FATs \t\t%numfat% \t\x20\x20%numfath% \t\t16 \t0x10 \t1
if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%number of FATs\x20\x20%numfat% \t\x20\x20%numfath%\t\t 16\t0x10 \t 1
if %pbrtype:~0,3%==FAT && if %format%==MS && echo -e BPB_NumFats \t%numfat% \t\x20\x20%numfath% \t\t16 \t0x10 \t1
if %pbrtype:~0,3%==FAT && if %format%==JL && echo -e %col4%Number_of_FATs\t %numfat%\t\x20\x20\x20%numfath%\t\t 16\t 0x10\t 1
set /A address=%base%+0x10 &; call :read %address% %source% ;; set /A numfath=%result%&0xffffff &; set /a numfat=%numfath%
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%reserved \t%numfat% \t\x20\x20%numfath% \t\t 16 \t0x10 \t 3%col2%\tmust be zero
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%reserved \t%numfat% \t\x20\x20%numfath% \t\t 16 \t0x10 \t 3$[0x78]\tmust be zero
if not %pbrtype:~0,3%==FAT && if %format%==MS && echo -e BPB_Reserved \t%numfat% \t\x20\x20%numfath% \t\t16 \t0x10 \t3
if not %pbrtype:~0,3%==FAT && if %format%==JL && echo -e %col4%Unused (0)\t %numfat%\t\x20\x20\x20%numfath%\t\t 16\t 0x10\t 3
set /A address=%base%+0x11 &; call :read %address% %source% ;; set /A rootdirh=%result%&0xffff &; set /a rootdire=%rootdirh%
call Fn.4 ;; set /a x=%@retval%>>8
if %format%==PQ && if not %EBPB%==MSDOS70 && echo -n -e %col3%Root Dir Entries \t%rootdire% && call :Fn.5 34 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 48 %x% && echo -e %col3%%17 \t0x11 \t2
if %format%==PQ && if %EBPB%==MSDOS70 && echo -n -e %col3%Reserved \t\t%rootdire% && call :Fn.5 34 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 48 %x% && echo -e %col3%%17 \t0x11 \t2
if %pbrtype:~0,3%==FAT && if not %EBPB%==MSDOS70 && if %format%==DEF && echo -n -e %col3%root dir entry \t%rootdire% && call :Fn.5 26 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 40 %x% && echo -e %col3% 17 \t0x11 \t 2\t%col5%%32 bytes/entry
if %pbrtype:~0,3%==FAT && if %EBPB%==MSDOS70 && if %format%==DEF && echo -n -e %col3%root dir entry \t%rootdire% && call :Fn.5 26 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 40 %x% && echo -e %col3% 17 \t0x11 \t 2\t%col5%must be zero
if %pbrtype:~0,3%==FAT && if %format%==MS && echo -n -e BPB_RootEntCnt \t%rootdire% && call :Fn.5 26 %x% && echo -n %rootdirh% && call :Fn.5 40 %x% && echo -e 17 \t0x11 \t2
if %pbrtype:~0,3%==FAT && if %format%==JL && echo -n -e %col3%Max_Root_Entries %rootdire% && call :Fn.5 27 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 41 %x% && echo -e %col3%%17\t 0x11\t 2
if not %pbrtype:~0,3%==FAT && set /A address=%base%+0x13 &; call :read %address% %source% ;; set /A rootdirh=%result%&0xffff &; set /a rootdire=%rootdirh%
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -n -e %col3%reserved \t%rootdire% && call :Fn.5 26 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 40 %x% && echo -e %col3% 19 \t0x13 \t 2%col5%\tmust be zero
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -n -e %col3%reserved \t%rootdire% && call :Fn.5 26 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 40 %x% && echo -e %col3% 19 \t0x13 \t 2$[0x87]\tmust be zero
if not %pbrtype:~0,3%==FAT && if %format%==MS && echo -n -e BPB_Reserved \t%rootdire% && call :Fn.5 26 %x% && echo -n %rootdirh% && call :Fn.5 40 %x% && echo -e 19 \t0x13 \t2
if not %pbrtype:~0,3%==FAT && if %format%==JL && echo -n -e %col3%Unused (1)\t %rootdire% && call :Fn.5 27 %x% && echo -n %col3%%%rootdirh% && call :Fn.5 41 %x% && echo -e %col3%%19\t 0x13\t 2
#-# TotSect16 unused in NTFS & Switch colors
if %pbrtype%==NTFS && if not %format%==PQ && set col6=%col5% && set col5=%col3% && set col3=%col4% &; set col4=%col5% && set col5= && goto :skip_TotSect16
#ORG#if %pbrtype%==NTFS && if not %format%==PQ && set col5=%col3% && set col3=%col4% &; set col4=%col5% && set col5= && goto :skip_TotSect16
set /A address=%base%+0x13 &; call :read %address% %source% ;; set /A totsc16h=%result%&0xffff &; set /a totsec16=%totsc16h%
set /A address=%base%+0x10 &; call :read %address% %source% ;; set /A numfath=%result%&0xff &; set /a numfat=%numfath%
set /A address=%base%+0x16 &; call :read %address% %source% ;; set /A secpfath=%result%&0xffff &; set /a secpfat=%secpfath%
#FAT12betterMax4084Clusters!#
if %pbrtype:~0,3%==FAT && if %totsc16h%>=1 && set /a rootsec=%rootdire% * 32 / %bytpsec% &; set /a maxclush=-1 * %numfat% * %secpfat% + %totsc16h% - %rsvdsect% - %rootsec% / %secclush% &; if %maxclush%<=4084 && set pbrtype=FAT12 ! set pbrtype=FAT16
call Fn.4 ;; set /a x=%@retval%>>8
if %format%==DEF && if not %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec16% && call :Fn.5 26 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 40 %x% && echo -e %col4% 19 \t0x13 \t 2\t%col2%< %max%MB && set max=
#ORG#if %format%==DEF && if not %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec16% && call :Fn.5 26 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 40 %x% && echo -e %col4% 19 \t0x13 \t 2\t$[0x78]< %max%MB && set max=
if %format%==DEF && if %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec16% && call :Fn.5 26 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 40 %x% &; if not %pbrtype%==FAT32 && echo -e %col4% 19 \t0x13 \t 2\t$[0x78]< %max%MB ! echo -e %col4% 19 \t0x13 \t 2\t%col2%must be zero &; set max=
#ORG#if %format%==DEF && if %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec16% && call :Fn.5 26 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 40 %x% &; if not %pbrtype%==FAT32 && echo -e %col4% 19 \t0x13 \t 2\t$[0x78]< %max%MB ! echo -e %col4% 19 \t0x13 \t 2\t$[0x78]must be zero &; set max=
if %format%==PQ &; if not %pbrtype%==FAT12 if not %pbrtype%==FAT16 || echo -n -e %col4%Total Sectors \t\t%totsec16% && call :Fn.5 34 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 48 %x% && echo -e %col4%%19 \t0x13 \t2
if %format%==PQ && if %pbrtype:~0,3%==FAT && if %totsc16h%==0 && echo -n -e %col4%Reserved \t\t%totsec16% && call :Fn.5 34 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 48 %x% && echo -e %col4%%19 \t0x13 \t2
if %format%==PQ && if %EBPB%==MSDOS70 && echo -n -e %col4%Reserved \t\t%totsec16% && call :Fn.5 34 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 48 %x% && echo -e %col4%%19 \t0x13 \t2
if %format%==PQ && if %pbrtype%==NTFS && echo -n -e %col4%Total Sectors \t\t%totsec16% && call :Fn.5 34 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 48 %x% && echo -e %col4%%19 \t0x13 \t2
if %format%==MS &; if not %pbrtype%==FAT12 if not %pbrtype%==FAT16 || echo -n -e BPB_TotSec16 \t%totsec16% && call :Fn.5 26 %x% && echo -n %totsc16h% && call :Fn.5 40 %x% && echo -e 19 \t0x13 \t2
if %format%==JL &; if not %pbrtype:~0,3%==FAT if not %pbrtype%==FAT12 if not %pbrtype%==FAT16 if not %EBPB%==MSDOS70 || echo -n -e %col4%Small_Sectors\t %totsec16% && call :Fn.5 27 %x% && echo -n %col4%%%totsc16h% && call :Fn.5 41 %x% && echo -e %col4%%19\t 0x13\t 2
if %format%==MS && if %EBPB%==MSDOS70 && echo -n -e BPB_TotSec16 \t%totsec16% && call :Fn.5 26 %x% && echo -n %totsc16h% && call :Fn.5 40 %x% && echo -e 19 \t0x13 \t2
:skip_TotSect16
set /A address=%base%+0x15 &; call :read %address% %source% ;; set /A mediabth=%result%&0xff &; set /a mediabyt=%mediabth%
if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e -n %col3%mediabyte \t%mediabyt% \t\x20\x20%mediabth% \t\t 21 \t0x15 \t 1 && call :mediabits "%mediabyt%" &; if %mediabyt%>=0xF0 && echo -e %col5%\tbit 3-0 %bit3%%%bit2%%%bit1%%%bit0% ! echo &; set bit0= && set bit1= && set bit2= && set bit3= && set bit7=
#ORG#if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e -n %col3%mediabyte \t%mediabyt% \t\x20\x20%mediabth% \t\t 21 \t0x15 \t 1 && call :mediabits "%mediabyt%" &; if %mediabyt%>=0xF0 && echo -e $[0x87]\tbit 3-0 %bit3%%%bit2%%%bit1%%%bit0% ! echo &; set bit0= && set bit1= && set bit2= && set bit3= && set bit7=
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e -n %col3%mediabyte \t%mediabyt% \t\x20\x20%mediabth% \t\t 21 \t0x15 \t 1 && call :mediabits "%mediabyt%" &; if %mediabyt%>=0xF0 && echo -e %col2%\tbit 3-0 %bit3%%%bit2%%%bit1%%%bit0% ! echo &; set bit0= && set bit1= && set bit2= && set bit3= && set bit7=
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e -n %col3%mediabyte \t%mediabyt% \t\x20\x20%mediabth% \t\t 21 \t0x15 \t 1 && call :mediabits "%mediabyt%" &; if %mediabyt%>=0xF0 && echo -e $[0x78]\tbit 3-0 %bit3%%%bit2%%%bit1%%%bit0% ! echo &; set bit0= && set bit1= && set bit2= && set bit3= && set bit7=
if %format%==PQ && echo -e %col3%Media Descriptor \t%mediabyt% \t\x20\x20%mediabth% \t\t21 \t0x15 \t1
if %format%==MS && echo -e BPB_Media \t%mediabyt% \t\x20\x20%mediabth% \t\t21 \t0x15 \t1
if %format%==JL && echo -e %col3%Media_Type\t %mediabyt%\t\x20\x20\x20%mediabth%\t\t 21\t 0x15\t 1
set /A address=%base%+0x16 &; call :read %address% %source% ;; set /A secpfath=%result%&0xffff &; set /a secpfat=%secpfath%
call Fn.4 ;; set /a x=%@retval%>>8
if %pbrtype:~0,3%==FAT && if not %EBPB%==MSDOS70 && if %format%==DEF && echo -n -e %col4%sectors/FAT\t%secpfat% && call :Fn.5 26 %x% && echo -n %col4%%%secpfath% && call :Fn.5 40 %x% && echo -e %col4% 22 \t0x16 \t 2\t%col2%%16-bit count
#ORG#if %pbrtype:~0,3%==FAT && if not %EBPB%==MSDOS70 && if %format%==DEF && echo -n -e %col4%sectors/FAT\t%secpfat% && call :Fn.5 26 %x% && echo -n %col4%%%secpfath% && call :Fn.5 40 %x% && echo -e %col4% 22 \t0x16 \t 2\t$[0x78]16-bit count
if %pbrtype:~0,3%==FAT && if %EBPB%==MSDOS70 && if %format%==DEF && echo -n -e %col4%sectors/FAT\t%secpfat% && call :Fn.5 26 %x% && echo -n %col4%%%secpfath% && call :Fn.5 40 %x% &; if not %pbrtype%==FAT32 && echo -e %col4% 22 \t0x16 \t 2\t$[0x78]16-bit count ! echo -e %col4% 22 \t0x16 \t 2\t%col2%must be zero
#ORG#if %pbrtype:~0,3%==FAT && if %EBPB%==MSDOS70 && if %format%==DEF && echo -n -e %col4%sectors/FAT\t%secpfat% && call :Fn.5 26 %x% && echo -n %col4%%%secpfath% && call :Fn.5 40 %x% &; if not %pbrtype%==FAT32 && echo -e %col4% 22 \t0x16 \t 2\t$[0x78]16-bit count ! echo -e %col4% 22 \t0x16 \t 2\t$[0x78]must be zero
#DEBUG#echo -n col1=%col1:~1% col2=%col2:~1% col3=%col3:~1% col4=%col4:~1% col5=%col5:~1% col6=%col6:~1% && pause
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -n -e %col4%reserved \t%secpfat% && call :Fn.5 26 %x% && echo -n %col4%%%secpfath% && call :Fn.5 40 %x% && echo -e %col4% 22 \t0x16 \t 2%col6%\tmust be zero
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -n -e %col4%reserved \t%secpfat% && call :Fn.5 26 %x% && echo -n %col4%%%secpfath% && call :Fn.5 40 %x% && echo -e %col4% 22 \t0x16 \t 2$[0x87]\tmust be zero
if %format%==PQ && echo -n -e %col4%Sectors per FAT \t%secpfat% && call :Fn.5 34 %x% && echo -n %col4%%%secpfath% && call :Fn.5 48 %x% && echo -e %col4%%22 \t0x16 \t2
if %pbrtype:~0,3%==FAT && if %format%==MS && echo -n -e BPB_FATSz16 \t%secpfat% && call :Fn.5 26 %x% && echo -n %secpfath% && call :Fn.5 40 %x% && echo -e 22 \t0x16 \t2
if %pbrtype:~0,3%==FAT && if %format%==JL && echo -n -e %col4%Sectors/Fat\t %secpfat% && call :Fn.5 27 %x% && echo -n %col4%%%secpfath% && call :Fn.5 41 %x% && echo -e %col4%%22\t 0x16\t 2
if not %pbrtype:~0,3%==FAT && if %format%==MS && echo -n -e BPB_Reserved \t%secpfat% && call :Fn.5 26 %x% && echo -n %secpfath% && call :Fn.5 40 %x% && echo -e 22 \t0x16 \t2
if not %pbrtype:~0,3%==FAT && if %format%==JL && echo -n -e %col4%Unused (2)\t %secpfat% && call :Fn.5 27 %x% && echo -n %col4%%%secpfath% && call :Fn.5 41 %x% && echo -e %col4%%22\t 0x16\t 2
set /A address=%base%+0x18 &; call :read %address% %source% ;; set /A sectrkh=%result%&0xffff &; set /a sectrack=%sectrkh%
if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%sectors/track\t%sectrack% \t\x20\x20%sectrkh% \t\t 24 \t0x18 \t 2\t%col5%sectors/head
#ORG#if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%sectors/track\t%sectrack% \t\x20\x20%sectrkh% \t\t 24 \t0x18 \t 2\t$[0x87]sectors/head
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%sectors/track\t%sectrack% \t\x20\x20%sectrkh% \t\t 24 \t0x18 \t 2\t%col2%sectors/head
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col3%sectors/track\t%sectrack% \t\x20\x20%sectrkh% \t\t 24 \t0x18 \t 2\t$[0x78]sectors/head
if %format%==PQ && echo -e %col3%Sectors per Track \t%sectrack% \t\x20\x20%sectrkh% \t\t24 \t0x18 \t2
if %format%==MS && echo -e BPB_SecPerTrk \t%sectrack% \t\x20\x20%sectrkh% \t\t24 \t0x18 \t2
if %format%==JL && echo -e %col3%Sectors/Head\t %sectrack%\t\x20\x20\x20%sectrkh%\t\t 24\t 0x18\t 2
set /A address=%base%+0x1A &; call :read %address% %source% ;; set /A numheadh=%result%&0xffff &; set /a numhead=%numheadh%
if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%number of heads %numhead% \t\x20\x20%numheadh% \t\t 26 \t0x1A \t 2\t%col2%tracks/cylinder
#ORG#if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%number of heads %numhead% \t\x20\x20%numheadh% \t\t 26 \t0x1A \t 2\t$[0x78]tracks/cylinder
if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%number of heads %numhead% \t\x20\x20%numheadh% \t\t 26 \t0x1A \t 2\t%col6%tracks/cylinder
#ORG#if not %pbrtype:~0,3%==FAT && if %format%==DEF && echo -e %col4%number of heads %numhead% \t\x20\x20%numheadh% \t\t 26 \t0x1A \t 2\t$[0x87]tracks/cylinder
if %format%==PQ && echo -e %col4%Number of Heads \t%numhead% \t\x20\x20%numheadh% \t\t26 \t0x1A \t2
if %format%==MS && echo -e BPB_NumHeads \t%numhead% \t\x20\x20%numheadh% \t\t26 \t0x1A \t2
if %format%==JL && echo -e %col4%Number_of_Heads\t %numhead%\t\x20\x20\x20%numheadh%\t\t 26\t 0x1A\t 2
set /A address=%base%+0x1C &; call :read %address% %source% ;; set /A hiddsech=%result%&0xffffffff &; set /a hiddsec=%hiddsech%
call Fn.4 ;; set /a x=%@retval%>>8
if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -n -e %col3%hidden sectors \t%hiddsec% && call :Fn.5 26 %x% && echo -n %col3%%%hiddsech% && call :Fn.5 40 %x% &; if %hiddsec%==0 && echo -e %col3% 28 \t0x1C \t 4\t%col5%begin disk pbr ! if %hiddsec%==%basesec% && echo -e %col3% 28 \t0x1C \t 4\t%col5%mbr/ gpt offset ! echo -e %col3% 28 \t0x1C \t 4\t%col5%ebr/ gpt offset
#ORG#if %pbrtype:~0,3%==FAT && if %format%==DEF && echo -n -e %col3%hidden sectors \t%hiddsec% && call :Fn.5 26 %x% && echo -n %col3%%%hiddsech% && call :Fn.5 40 %x% &; if %hiddsec%==0 && echo -e %col3% 28 \t0x1C \t 4\t%col1%begin disk pbr ! if %hiddsec%==%basesec% && echo -e %col3% 28 \t0x1C \t 4\t$[0x87]mbr/ gpt offset ! echo -e %col3% 28 \t0x1C \t 4\t$[0x87]ebr/ gpt offset
if %pbrtype%==NTFS && if %format%==DEF && echo -n -e %col3%hidden sectors \t%hiddsec% && call :Fn.5 26 %x% && echo -n %col3%%%hiddsech% && call :Fn.5 40 %x% &; if %hiddsec%==0 && echo -e %col3% 28 \t0x1C \t 4\t%col2%absolute offset ! if %hiddsec%==%basesec% && echo -e %col3% 28 \t0x1C \t 4\t%col2%mbr/ gpt offset ! echo -e %col3% 28 \t0x1C \t 4\t%col2%ebr/ gpt offset
#ORG#if %pbrtype%==NTFS && if %format%==DEF && echo -n -e %col3%hidden sectors \t%hiddsec% && call :Fn.5 26 %x% && echo -n %col3%%%hiddsech% && call :Fn.5 40 %x% &; if %hiddsec%==0 && echo -e %col3% 28 \t0x1C \t 4\t$[0x78]absolute offset ! if %hiddsec%==%basesec% && echo -e %col3% 28 \t0x1C \t 4\t$[0x78]mbr/ gpt offset ! echo -e %col3% 28 \t0x1C \t 4\t$[0x78]ebr/ gpt offset
if %format%==PQ && echo -n -e %col3%Hidden Sectors \t\t%hiddsec% && call :Fn.5 34 %x% && echo -n %col3%%%hiddsech% && call :Fn.5 48 %x% && echo -e %col3%%28 \t0x1C \t4
if %format%==MS && echo -n -e BPB_HiddSec \t%hiddsec% && call :Fn.5 26 %x% && echo -n %hiddsech% && call :Fn.5 40 %x% && echo -e 28 \t0x1C \t4
if %format%==JL && echo -n -e %col3%Sectors_Before\t %hiddsec% && call :Fn.5 27 %x% && echo -n %col3%%%hiddsech% && call :Fn.5 41 %x% && echo -e %col3%%28\t 0x1C\t 4
set /A address=%base%+0x20 &; call :read %address% %source% ;; set /A totsc32h=%result%&0xffffffff &; set /a totsec32=%totsc32h%
if %secpfat%==0 && set /A address=%base%+0x24 &; call :read %address% %source% &; set /A secpfath=%result%&0xffffffff &; set /a secpfat=%secpfath%
#BETTERforFAT12>=32MB_and_FAT16<=65524_Clusters#
if %pbrtype:~0,3%==FAT && if %totsc16h%==0 && if %totsc32h%>=1 && set /a rootsec=%rootdire% * 32 / %bytpsec% &; set /a maxclush=-1 * %numfat% * %secpfat% + %totsc32h% - %rsvdsect% - %rootsec% / %secclush% &; if %maxclush%<=4084 && set pbrtype=FAT12 ! if %maxclush%<=65524 && set pbrtype=FAT16 ! set pbrtype=FAT32
if %pbrtype:~0,3%==FAT &; if not %CDROM%==Y && if not exist file && if not exist BLOCK && if not exist block &; if %base%==0 && set /a skip=%start% ! set /a skip=%base%/0x200
if %pbrtype:~0,3%==FAT &; if %CDROM%==Y && if not exist file && if not exist BLOCK && if not exist block &; if %base%==0 && set /a skip=%start% ! set /a skip=%base%/2k
if %pbrtype:~0,3%==FAT &; if not %CDROM%==Y &; if not exist file if not exist BLOCK || set /A skip=%base%
if %pbrtype:~0,3%==FAT &; if %CDROM%==Y &; if not exist file if not exist BLOCK || set /A skip=%base%
if %pbrtype:~0,3%==FAT &; if not %CDROM%==Y && if exist block &; set /a skip=%base%/0x200
if %pbrtype:~0,3%==FAT &; if %CDROM%==Y && if exist block &; calc %base% % 2k || set /a skip=%base%/2k ! set /A skip=%base%
if not %CDROM%==Y && if not exist file && if not exist BLOCK && if %pbrtype:~0,3%==FAT &; echo -e -n %pbrtype% Partition Boot Record %DEVICE% sector %skip% | set header1= &; echo -P:0000 -n -e %col1%%%header1%
if %CDROM%==Y && if not exist file && if not exist BLOCK && if %pbrtype:~0,3%==FAT &; calc %base% % 2k |; echo -e -n %pbrtype% Partition Boot Record %DEVICE% sector %skip% | set header1= &; echo -P:0000 -n -e %col1%%%header1%
if not exist header1 && if %CDROM%==Y && if not exist file && if not exist BLOCK && if %pbrtype:~0,3%==FAT &; calc %base% % 2k && set /A skip=%base% &; echo -e -n %pbrtype% Partition Boot Record %DEVICE% offset %skip% | set header1= &; echo -P:0000 -n -e %col1%%%header1%
if exist file && if %pbrtype:~0,3%==FAT && echo -e "%source%" | set echosrc= &; set "echosrc=%echosrc:~1,-1%" &; set /a srclen=%@retval%
if exist file && if %pbrtype:~0,3%==FAT &; if %srclen%<=35 && echo %pbrtype% Partition Boot Record %source% offset %skip% | set header1= &; echo -P:0000 -n -e %col1%%%header1% && set srclen=
if exist file && if %pbrtype:~0,3%==FAT &; if not %srclen%<=35 && echo %pbrtype% Partition Boot Record %echosrc:~0,20%\x2E\x2E\x2E%echosrc:~-12,12% offset %skip% | set header1= &; echo -P:0000 -n -e %col1%%%header1% && set srclen=
if exist BLOCK && if %pbrtype:~0,3%==FAT &; echo %pbrtype% Partition Boot Record %BLOCK% offset %skip% | set header1= &; echo -P:0000 -n -e %col1%%%header1%
set CDROM= && set skip= && set start=
call Fn.4 ;; set /a x=%@retval%>>8
if %format%==DEF && if %pbrtype:~0,3%==FAT && if not %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec32% && call :Fn.5 26 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 40 %x% && echo -e %col4% 32 \t0x20 \t 4\t%col2%>=%max%MB && set max=
#ORG#if %format%==DEF && if %pbrtype:~0,3%==FAT && if not %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec32% && call :Fn.5 26 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 40 %x% && echo -e %col4% 32 \t0x20 \t 4\t$[0x78]>=%max%MB && set max=
if %format%==DEF && if %pbrtype:~0,3%==FAT && if %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec32% && call :Fn.5 26 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 40 %x% && echo -e %col4% 32 \t0x20 \t 4\t%col2%>=%max%MB && set max=
#ORG#if %format%==DEF && if %pbrtype:~0,3%==FAT && if %EBPB%==MSDOS70 && set /a max=0x10000 * %bytpsec% / 1m &; echo -e -n %col4%total sectors\x20\x20\x20%totsec32% && call :Fn.5 26 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 40 %x% && echo -e %col4% 32 \t0x20 \t 4\t$[0x78]>=%max%MB && set max=
if %format%==DEF && if %pbrtype%==NTFS && echo -e -n %col4%reserved \t%totsec32% && call :Fn.5 26 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 40 %x% && echo -e %col4% 32 \t0x20 \t 4%col6%\tmust be zero
#ORG#if %format%==DEF && if %pbrtype%==NTFS && echo -e -n %col4%reserved \t%totsec32% && call :Fn.5 26 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 40 %x% && echo -e %col4% 32 \t0x20 \t 4$[0x87]\tmust be zero
if %format%==PQ && if %pbrtype:~0,3%==FAT && echo -e -n %col4%Big Total Sectors \t%totsec32% && call :Fn.5 34 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 48 %x% && echo -e %col4%%32 \t0x20 \t4
if %format%==PQ && if %pbrtype%==NTFS && echo -e -n %col4%Total Sectors (>32MB) \t%totsec32% && call :Fn.5 34 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 48 %x% && echo -e %col4%%32 \t0x20 \t4
if %format%==MS && if %pbrtype:~0,3%==FAT && echo -e -n BPB_TotSec32 \t%totsec32% && call :Fn.5 26 %x% && echo -n %totsc32h% && call :Fn.5 40 %x% && echo -e 32 \t0x20 \t4
if %format%==JL && if %pbrtype:~0,3%==FAT && echo -e -n %col4%Large_Sectors\t %totsec32% && call :Fn.5 27 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 41 %x% && echo -e %col4%%32\t 0x20\t 4
if %format%==MS && if %pbrtype%==FAT32 && echo -e -n BPB_TotSec32 \t%totsec32% && call :Fn.5 26 %x% && echo -n %totsc32h% && call :Fn.5 40 %x% && echo -e 32 \t0x20 \t4
if %format%==MS && if %pbrtype%==NTFS && echo -e -n BPB_Reserved \t%totsec32% && call :Fn.5 26 %x% && echo -n %totsc32h% && call :Fn.5 40 %x% && echo -e 32 \t0x20 \t4
if %format%==JL && if %pbrtype%==NTFS && echo -e -n %col4%Unused (3)\t %totsec32% && call :Fn.5 27 %x% && echo -n %col4%%%totsc32h% && call :Fn.5 41 %x% && echo -e %col4%%32\t 0x20\t 4
endlocal && set pbrtype=%pbrtype% && set "header1=%header1%"
if %pbrtype:~0,3%==FAT && if %EBPB%==MSDOS70 && set EBPB= && goto :FAT32Specific ! set EBPB=
if %pbrtype%==NTFS && goto :NTFSSpecific
setlocal
if %pbrtype:~0,3%==FAT && set /A address=%base%+0x24 &; call :read %address% %source% ;; set /A drvnumh=%result%&0xff &; set /a drivenum=%drvnumh%
if %format%==DEF &; if %drivenum%<=0x7E && set "note=removable media" ! if %drivenum%==0x7F && set "note=internal pupose" ! if %drivenum%<=0xFE && set "note=fixed disk" ! if %drivenum%==0xFF && set "note=internal purpose" &; echo -e %col3%drive number \t%drivenum% \t\x20\x20%drvnumh% \t\t 36 \t0x24 \t 1\t%col5%%%note% && set note=
#ORG#if %format%==DEF &; if %drivenum%<=0x7E && set "note=removable media" ! if %drivenum%==0x7F && set "note=internal pupose" ! if %drivenum%<=0xFE && set "note=fixed disk" ! if %drivenum%==0xFF && set "note=internal purpose" &; echo -e %col3%drive number \t%drivenum% \t\x20\x20%drvnumh% \t\t 36 \t0x24 \t 1\t$[0x87]%note% && set note=
if %format%==PQ && echo -e %col3%Drive ID \t\t%drivenum% \t\x20\x20%drvnumh% \t\t36 \t0x24 \t1
if %format%==MS && echo -e BS_DrvNum \t%drivenum% \t\x20\x20%drvnumh% \t\t36 \t0x24 \t1
if %format%==JL && echo -e %col3%Disk_Number\t %drivenum%\t\x20\x20\x20%drvnumh%\t\t 36\t 0x24\t 1
set /A address=%base%+0x25 &; call :read %address% %source% ;; set /A rsvrdh=%result%&0xff &; set /a reserved=%rsvrdh%
if %format%==DEF && echo -e %col4%reserved NT \t%reserved% \t\x20\x20%rsvrdh% \t\t 37 \t0x25 \t 1\t%col2%flags in win NT
#ORG#if %format%==DEF && echo -e %col4%reserved NT \t%reserved% \t\x20\x20%rsvrdh% \t\t 37 \t0x25 \t 1\t$[0x78]flags in win NT
if %format%==PQ && echo -e %col4%Dirty Flag:\t\t%reserved% \t\x20\x20%rsvrdh% \t\t37 \t0x25 \t1
if %format%==MS && echo -e BS_Reserved1 \t%reserved% \t\x20\x20%rsvrdh% \t\t37 \t0x25 \t1
if %format%==JL && echo -e %col4%Dirty_FS_Flag\t %reserved%\t\x20\x20\x20%rsvrdh%\t\t 37\t 0x25\t 1
set /A address=%base%+0x26 &; call :read %address% %source% ;; set /A extendh=%result%&0xff &; set /a extended=%extendh%
if %format%==DEF && echo -e -n %col3%ebpb signature\t%extended% \t\x20\x20%extendh% \t\t 38 \t0x26 \t 1 &; if not %extendh%==0x28 if not %extendh%==0x29 || echo -e %col5%\tversion 4.0 ! echo
#ORG#if %format%==DEF && echo -e -n %col3%ebpb signature\t%extended% \t\x20\x20%extendh% \t\t 38 \t0x26 \t 1 &; if not %extendh%==0x28 if not %extendh%==0x29 || echo -e $[0x87]\tversion 4.0 ! echo
if %format%==PQ && echo -e %col3%Extended Boot Sig \t%extended% \t\x20\x20%extendh% \t\t38 \t0x26 \t1
if %format%==MS && echo -e BS_BootSig \t%extended% \t\x20\x20%extendh% \t\t38 \t0x26 \t1
if %format%==JL && echo -e %col3%FAT_Signature\t %extended%\t\x20\x20\x20%extendh%\t\t 38\t 0x26\t 1
set /A address=%base%+0x27 &; call :read %address% %source% ;; set /A uuidh=%result%&0xffffffff &; set uuid=00000000%uuidh:~2% &; set uuidh=0x%uuid:~-8,8%
if %format%==DEF && echo -e %col4%uuid \t\t%uuid:~-8,4%-%uuid:~-4,4% %uuidh% \t 39 \t0x27 \t 4
if %format%==PQ && echo -e %col4%Serial Number \t\t%uuid:~-8,4%%%uuid:~-4,4% \x20%uuidh% \t39 \t0x27 \t4
if %format%==MS && echo -e BS_VolID \t%uuid:~-8,4%-%uuid:~-4,4% %uuidh% \t39 \t0x27 \t4
if %format%==JL && echo -e %col4%Volume_Serial\t %uuid:~-8,4%-%uuid:~-4,4% %uuidh%\t 39\t 0x27\t 4
set /A address=%base%+0x2B &; raw cat --skip=%address% --length=11 %source% | set label= &; if not exist label && set "label=N/A        "
if %format%==DEF && echo -e %col3%label \t\t%label% \t\t 43 \t0x2B \t11
if %format%==PQ && echo -e %col3%Volume Name \t\t%label% \t\t43 \t0x2B \t11
if %format%==MS && echo -e BS_VolLab \t%label% \t\t43 \t0x2B \t11
if %format%==JL && echo -e %col3%Volume_Label\t %label%\t\t 43\t 0x2B\t 11
set /A address=%base%+0x36 &; raw cat --skip=%address% --length=8 %source% | set filesys= &; if not exist filesys && set "filesys=N/A     "
if %format%==DEF && echo -e %col4%file system \t%filesys% \t\t 54 \t0x36 \t 8
if %format%==PQ && echo -e %col4%File System ID \t\t%filesys% \t\t54 \t0x36 \t8
if %format%==MS && echo -e BS_FilSysType \t%filesys% \t\t54 \t0x36 \t8
if %format%==JL && echo -e %col4%System_ID\t %filesys%\t\t 54\t 0x36\t 8
endlocal
goto :EndOfSector0
::
:FAT32Specific
setlocal
pager on
set /A address=%base%+0x24 &; call :read %address% %source% ;; set /A secpfath=%result%&0xffffffff &; set /a secpfat=%secpfath%
if %secpfat%<=0xFF && set "t=\t"
if %format%==DEF && echo -e %col3%sectors/FAT32 \t%secpfat% \t\x20\x20%secpfath% %t%\t 36 \t0x24 \t 4\t%col5%%32-bit count && set t=
#ORG#if %format%==DEF && echo -e %col3%sectors/FAT32 \t%secpfat% \t\x20\x20%secpfath% %t%\t 36 \t0x24 \t 4\t$[0x87]32-bit count && set t=
if %format%==PQ && echo -e %col3%Big Sectors per FAT \t%secpfat% \t\x20\x20%secpfath% %t%\t36 \t0x24 \t4 && set t=
if %format%==MS && echo -e BPB_FATSz32 \t%secpfat% \t\x20\x20%secpfath% %t%\t36 \t0x24 \t4 && set t=
if %format%==JL && echo -e %col3%Sectors/Fat\t %secpfat%\t\x20\x20\x20%secpfath%\t%t% 36\t 0x24\t 4 && set t=
set /A address=%base%+0x28 &; call :read %address% %source% ;; set /A extflagh=%result%&0xffff &; set /a extflags=%extflagh%
if %format%==DEF && echo -e -n %col4%mirroring \t%extflags% \t\x20\x20%extflagh% \t\t 40 \t0x28 \t 2 &; call :mediabits "%extflags%" &; echo -e %col2%\tbit7-0 %bit7%%000%bit3%%%bit2%%%bit1%%%bit0% && set bit0= && set bit1= && set bit2= && set bit3= && set bit7=
#ORG#if %format%==DEF && echo -e -n %col4%mirroring \t%extflags% \t\x20\x20%extflagh% \t\t 40 \t0x28 \t 2 &; call :mediabits "%extflags%" &; echo -e $[0x78]\tbit7-0 %bit7%%000%bit3%%%bit2%%%bit1%%%bit0% && set bit0= && set bit1= && set bit2= && set bit3= && set bit7=
if %format%==PQ && echo -e %col4%Extended Flags \t\t%extflags% \t\x20\x20%extflagh% \t\t40 \t0x28 \t2
if %format%==MS && echo -e BPB_ExtFlags \t%extflags% \t\x20\x20%extflagh% \t\t40 \t0x28 \t2
if %format%==JL && echo -e %col4%Flags\t\t %extflags%\t\x20\x20\x20%extflagh%\t\t 40\t 0x28\t 2
set /A address=%base%+0x2A &; call :read %address% %source% ;; set /A fsverh=%result%&0xffff &; set fsver=0000%fsverh:~2% &; set fsver=%fsver:~-4,2%%%fsver:~-2,2%
if %format%==DEF && echo -e %col3%fs version \t%fsver% \t\x20\x20%fsverh% \t\t 42 \t0x2A \t 2%col5%\trevision %fsver:~0,2%:%fsver:~2,2%
#ORG#if %format%==DEF && echo -e %col3%fs version \t%fsver% \t\x20\x20%fsverh% \t\t 42 \t0x2A \t 2$[0x87]\trevision %fsver:~0,2%:%fsver:~2,2%
if %format%==PQ && echo -e %col3%FS Version \t\t%fsver% \t\x20\x20%fsverh% \t\t42 \t0x2A \t2
if %format%==MS && echo -e BPB_FSVer \t%fsver% \t\x20\x20%fsverh% \t\t42 \t0x2A \t2
if %format%==JL && echo -e %col3%FS_Version\t %fsver%\t\x20\x20\x20%fsverh%\t\t 42\t 0x2A\t 2
set /A address=%base%+0x2C &; call :read %address% %source% ;; set /A rootclsh=%result%&0xffffffff &; set /a rootclus=%rootclsh%
if %format%==DEF && echo -e %col4%first rootclus \t%rootclus% \t\x20\x20%rootclsh% \t\t 44 \t0x2C \t 4\t%col2%cluster number
#ORG#if %format%==DEF && echo -e %col4%first rootclus \t%rootclus% \t\x20\x20%rootclsh% \t\t 44 \t0x2C \t 4\t$[0x78]cluster number
if %format%==PQ && echo -e %col4%First Cluster of Root \t%rootclus% \t\x20\x20%rootclsh% \t\t44 \t0x2C \t4
if %format%==MS && echo -e BPB_RootClus \t%rootclus% \t\x20\x20%rootclsh% \t\t44 \t0x2C \t4
if %format%==JL && echo -e %col4%RootDir_1st_Clus %rootclus%\t\x20\x20\x20%rootclsh%\t\t 44\t 0x2C\t 4
set /A address=%base%+0x30 &; call :read %address% %source% ;; set /A fsinfoh=%result%&0xff &; set /a fsinfo=%fsinfoh%
if %format%==DEF && echo -e %col3%fsinfo sector \t%fsinfo% \t\x20\x20%fsinfoh% \t\t 48 \t0x30 \t 2
if %format%==PQ && echo -e %col3%FS Info Sector \t\t%fsinfo% \t\x20\x20%fsinfoh% \t\t48 \t0x30 \t2
if %format%==MS && echo -e BPB_FSInfo \t%fsinfo% \t\x20\x20%fsinfoh% \t\t48 \t0x30 \t2
if %format%==JL && echo -e %col3%FSInfo_sector\t %fsinfo%\t\x20\x20\x20%fsinfoh%\t\t 48\t 0x30\t 2
set /A address=%base%+0x32 &; call :read %address% %source% ;; set /A backsech=%result%&0xff &; set /a backsec=%backsech%
if %format%==DEF && echo -e %col4%backup sector \t%backsec% \t\x20\x20%backsech% \t\t 50 \t0x32 \t 2
if %format%==PQ && echo -e %col4%Backup Boot Sector \t%backsec% \t\x20\x20%backsech% \t\t50 \t0x32 \t2
if %format%==MS && echo -e BPB_BkBootSec \t%backsec% \t\x20\x20%backsech% \t\t50 \t0x32 \t2
if %format%==JL && echo -e %col4%Backup_bootsect\t %backsec%\t\x20\x20\x20%backsech%\t\t 50\t 0x32\t 2
set /A address=%base%+0x34 &; call :read %address% %source% ;; set /A bpbresh=%result%&0xffffffff &; set bpbres0=00000000%bpbresh:~8,2%%%bpbresh:~6,2%%%bpbresh:~4,2%%%bpbresh:~2,2% &; set bpbres0=%bpbres0:~-8,8%
set /A address=%base%+0x38 &; call :read %address% %source% ;; set /A bpbresh=%result%&0xffffffff &; set bpbres1=00000000%bpbresh:~8,2%%%bpbresh:~6,2%%%bpbresh:~4,2%%%bpbresh:~2,2% &; set bpbres1=%bpbres1:~-8,8%
set /A address=%base%+0x3C &; call :read %address% %source% ;; set /A bpbresh=%result%&0xffffffff &; set bpbres2=00000000%bpbresh:~8,2%%%bpbresh:~6,2%%%bpbresh:~4,2%%%bpbresh:~2,2% &; set bpbres2=%bpbres2:~-8,8%
set /A bpbresh=%bpbres2%%%bpbres1%%%bpbres0% &; set /a bpbres=%bpbresh% && set bpbres0= && set bpbres1= && set bpbres2=
if not %bpbresh%<=999999999 && set bpbresh=
if %bpbres%==0 && if %format%==DEF && echo -e %col3%reserved \t12 dup 0\t\t 52 \t0x34 \t12\t%col5%must be zero\x20\x20\x20
#ORG#if %bpbres%==0 && if %format%==DEF && echo -e %col3%reserved \t12 dup 0\t\t 52 \t0x34 \t12\t$[0x87]must be zero\x20\x20\x20
if not %bpbres%==0 && if %format%==DEF && echo -e %col3%reserved \t%bpbres%\t  %bpbresh% \t\t52 \t0x34 \t12 \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==PQ && echo -e %col3%Reserved \t\t%bpbres%\t  %bpbresh% \t\t52 \t0x34 \t12\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BPB_Reserved \t%bpbres%\t  %bpbresh% \t\t52 \t0x34 \t12
if %format%==JL && echo -e %col3%Unused (0)\t %bpbres%\t\x20\x20\x20%bpbresh%\t\t 52\t 0x34\t 12\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /A address=%base%+0x40 &; call :read %address% %source% ;; set /A drvnumh=%result%&0xff &; set /a drivenum=%drvnumh%
if %format%==DEF &; if %drivenum%<=0x7E && set "note=removable media" ! if %drivenum%==0x7F && set "note=internal pupose" ! if %drivenum%<=0xFE && set "note=fixed disk\x20\x20\x20\x20\x20" ! if %drivenum%==0xFF && set "note=internal purpose" &; echo -e %col4%drive number \t%drivenum% \t\x20\x20%drvnumh% \t\t 64 \t0x40 \t 1\t%col2%%%note% && set note=
#ORG#if %format%==DEF &; if %drivenum%<=0x7E && set "note=removable media" ! if %drivenum%==0x7F && set "note=internal pupose" ! if %drivenum%<=0xFE && set "note=fixed disk\x20\x20\x20\x20\x20" ! if %drivenum%==0xFF && set "note=internal purpose" &; echo -e %col4%drive number \t%drivenum% \t\x20\x20%drvnumh% \t\t 64 \t0x40 \t 1\t$[0x78]%note% && set note=
if %format%==PQ && echo -e %col4%Drive ID \t\t%drivenum% \t\x20\x20%drvnumh% \t\t64 \t0x40 \t1\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_DrvNum \t%drivenum% \t\x20\x20%drvnumh% \t\t64 \t0x40 \t1
if %format%==JL && echo -e %col4%Disk_Number\t %drivenum%\t\x20\x20\x20%drvnumh%\t\t 64\t 0x40\t 1\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
#-# Second header in case of FAT32
setlocal
read VAR.23 ;; set /A grphmode=%@retval%
if not exist @uefi &; if %grphmode%<=0x10C && if %grphmode%>=0x102 && set grphmode=800 ! if %grphmode%<=0x11F && if %grphmode%>=0x113 && set grphmode=800 ! if %grphmode%<=0x145 && if %grphmode%>=0x143 && set grphmode=800 ! if %grphmode%<=0x14F && if %grphmode%>=0x147 && set grphmode=800 ! set grphmode=640
if exist @uefi &; if %grphmode%>=0x101 && set grphmode=800 ! set grphmode=640
if not exist grphmode && set grphmode=640
if %grphmode%==640 &; echo -n $[0x0F][Hit Q to quit, any other key to continue] && pause && clear
if %grphmode%==640 &; if %format%==DEF && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 6 %col3% %col4% 0
if %grphmode%==640 &; if %format%==PQ && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 6 %col3% %col4% 0
if %grphmode%==640 &; if %format%==JL && call :EchoColor 2 %col1% %col2% 2 &; call :EchoColor 6 %col3% %col4% 0
if %grphmode%==640 &; echo %col1%%%header1% && echo %col2%%%header2%
if %grphmode%>=800 &; if %format%==DEF && call :EchoColor 6 %col4% %col3% 0
if %pagersts%==0 && pager off
endlocal && set grphmode=%grphmode%
set /A address=%base%+0x41 &; call :read %address% %source% ;; set /A rsvrdh=%result%&0xff &; set /a reserved=%rsvrdh%
if %format%==DEF && echo -e %col3%reserved NT \t%reserved% \t\x20\x20%rsvrdh% \t\t 65 \t0x41 \t 1\t%col5%flags in win NT
#ORG#if %format%==DEF && echo -e %col3%reserved NT \t%reserved% \t\x20\x20%rsvrdh% \t\t 65 \t0x41 \t 1\t$[0x87]flags in win NT
if %format%==PQ && echo -e %col3%Reserved for NT \t%reserved% \t\x20\x20%rsvrdh% \t\t65 \t0x41 \t1\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_Reserved1 \t%reserved% \t\x20\x20%rsvrdh% \t\t65 \t0x41 \t1
if %format%==JL && echo -e %col3%Dirty_FS_Flag\t %reserved%\t\x20\x20\x20%rsvrdh%\t\t 65\t 0x41\t 1\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /A address=%base%+0x42 &; call :read %address% %source% ;; set /A extendh=%result%&0xff &; set /a extended=%extendh%
if %format%==DEF && echo -e -n %col4%ebpb signature\t%extended% \t\x20\x20%extendh% \t\t 66 \t0x42 \t 1 &; if not %extendh%==0x28 if not %extendh%==0x29 || echo -e %col2%\tversion 7.0 ! echo
#ORG#if %format%==DEF && echo -e -n %col4%ebpb signature\t%extended% \t\x20\x20%extendh% \t\t 66 \t0x42 \t 1 &; if not %extendh%==0x28 if not %extendh%==0x29 || echo -e $[0x78]\tversion 7.0 ! echo
if %format%==PQ && echo -e %col4%Extended Boot Sig \t%extended% \t\x20\x20%extendh% \t\t66 \t0x42 \t1\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_BootSig \t%extended% \t\x20\x20%extendh% \t\t66 \t0x42 \t1
if %format%==JL && echo -e %col4%FAT_Signature\t %extended%\t\x20\x20\x20%extendh%\t\t 66\t 0x42\t 1\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /A address=%base%+0x43 &; call :read %address% %source% ;; set /A uuidh=%result%&0xffffffff &; set uuid=00000000%uuidh:~2% &; set uuidh=0x%uuid:~-8,8%
if %format%==DEF && echo -e %col3%uuid \t\t%uuid:~-8,4%-%uuid:~-4,4% %uuidh% \t 67 \t0x43 \t 4
if %format%==PQ && echo -e %col3%Serial Number \t\t%uuid:~-8,4%%%uuid:~-4,4% \x20%uuidh% \t43 \t0x43 \t4\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_VolID \t%uuid:~-8,4%-%uuid:~-4,4% %uuidh% \t67 \t0x43 \t4
if %format%==JL && echo -e %col3%Volume_Serial\t %uuid:~-8,4%-%uuid:~-4,4% %uuidh%\t 67\t 0x43\t 4\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /A address=%base%+0x47 &; raw cat --skip=%address% --length=11 %source% | set label= &; if not exist label && set "label=N/A        "
if %format%==DEF && echo -e %col4%label \t\t%label% \t\t 71 \t0x47 \t11
if %format%==PQ && echo -e %col4%Volume Name \t\t%label% \t\t71 \t0x47 \t11\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_VolLab \t%label% \t\t71 \t0x47 \t11
if %format%==JL && echo -e %col4%Volume_label\t %label%\t\t 71\t 0x47\t 11\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /A address=%base%+0x52 &; raw cat --skip=%address% --length=8 %source% | set filesys= &; if not exist filesys && set "filesys=N/A     "
if %format%==DEF && echo -e %col3%file system \t%filesys% \t\t 82 \t0x52 \t 8\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==PQ && echo -e %col3%File System ID \t\t%filesys% \t\t82 \t0x52 \t4\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_FilSysType \t%filesys% \t\t82 \t0x52 \t8
if %format%==JL && echo -e %col3%System_ID\t %filesys%\t\t 82\t 0x52\t 8\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
endlocal && set grphmode=%grphmode%
#-# Switch colors
set col5=%col3% && set col3=%col4% &; set col4=%col5% && set col5=
goto :EndOfSector0
::
:NTFSSpecific
#-# CHECK for reserved etc!
setlocal
set /A address=%base%+0x24 &; call :read %address% %source% ;; set /A unused1h=%result%&0xffffffff &; set unused1h=0x00%unused1h:~2%
set unused1=%unused1h:~8,2%%%unused1h:~6,2%%%unused1h:~4,2%%%unused1h:~2,2% &; set unused1=%unused1:~-8,8% && set /A unused1h=%unused1h%
if %format%==DEF && echo -e %col4%unused \t\t%unused1% \x20%unused1h% \t 36 \t0x24 \t 4%col2%\tnot checked
#ORG#if %format%==DEF && echo -e %col4%unused \t\t%unused1% \x20%unused1h% \t 36 \t0x24 \t 4$[0x78]\tnot checked
#LEFT-OUT#if %format%==PQ && echo -e %col4%Unused \t\t\t%unused1% \x20%unused1h% \t36 \t0x24 \t4
if %format%==MS && echo -e Reserved \t%unused1% \x20%unused1h% \t36 \t0x24 \t4
if %format%==JL && echo -e %col4%Reserved\t %unused1% \x20%unused1h%\t 36\t 0x24\t 4
set /A address=%base%+0x28 &; call :read %address% %source% ;; set totsecLh=%result% &; set totsecL=00000000%totsecLh:~2% &; set totsecl=%totsecL:~-8,8%
set /A address=%base%+0x2C &; call :read %address% %source% ;; set /A totsecHh=%result% &; set totsecH=00000000%totsecHh:~2% &; set totsech=%totsecH:~-8,8%
set /a totsec=0x%totsech%%%totsecl% &; set /A totsech=%totsec%
call Fn.4 ;; set /a x=%@retval%>>8
if not %totsech%<=999999999 && set totsech=
if %format%==DEF && echo -n -e %col3%total sect NTFS %totsec% && call :Fn.5 26 %x% && echo -n %col3%%%totsech% && call :Fn.5 40 %x% && echo -e %col3% 40 \t0x28 \t 8%col5%\t64-bit count
#ORG#if %format%==DEF && echo -n -e %col3%total sect NTFS %totsec% && call :Fn.5 26 %x% && echo -n %col3%%%totsech% && call :Fn.5 40 %x% && echo -e %col3% 40 \t0x28 \t 8$[0x87]\t64-bit count
if %format%==PQ && echo -n -e %col3%Total NTFS Sectors \t%totsec% && call :Fn.5 34 %x% && echo -n %col3%%%totsech% && call :Fn.5 48 %x% && echo -e %col3%%40 \t0x28 \t8
if %format%==MS && echo -n -e BPB_TotSec64 \t%totsec% && call :Fn.5 26 %x% && echo -n %totsech% && call :Fn.5 40 %x% && echo -e 40 \t0x28 \t8
if %format%==JL && echo -n -e %col3%Total_Sectors\t %totsec% && call :Fn.5 27 %x% && echo -n %col3%%%totsech% && call :Fn.5 41 %x% && echo -e %col3%%40\t 0x28\t 8
set /A address=%base%+0x30 &; call :read %address% %source% ;; set /A mftstrLh=%result% &; set mftstrL=00000000%mftstrLh:~2% &; set mftstrl=%mftstrL:~-8,8%
set /A address=%base%+0x34 &; call :read %address% %source% ;; set /A mftstrHh=%result% &; set mftstrH=00000000%mftstrHh:~2% &; set mftstrh=%mftstrH:~-8,8%
set /a mftstr=0x%mftstrh%%%mftstrl% &; set /A mftstrh=%mftstr%
call Fn.4 ;; set /a x=%@retval%>>8
if not %mftstrh%<=999999999 && set mftstrh=
if %format%==DEF && echo -n -e %col4%mft start \t%mftstr% && call :Fn.5 26 %x% && echo -n %col4%%%mftstrh% && call :Fn.5 40 %x% && echo -e %col4% 48 \t0x30 \t 8%col2%\tcluster number
#ORG#if %format%==DEF && echo -n -e %col4%mft start \t%mftstr% && call :Fn.5 26 %x% && echo -n %col4%%%mftstrh% && call :Fn.5 40 %x% && echo -e %col4% 48 \t0x30 \t 8$[0x78]\tcluster number
if %format%==PQ && echo -n -e %col4%MFT Start Cluster \t%mftstr% && call :Fn.5 34 %x% && echo -n %col4%%%mftstrh% && call :Fn.5 48 %x% && echo -e %col4%%48 \t0x30 \t8
if %format%==MS && echo -n -e BPB_MftClus \t%mftstr% && call :Fn.5 26 %x% && echo -n %mftstrh% && call :Fn.5 40 %x% && echo -e 48 \t0x30 \t8
if %format%==JL && echo -n -e %col4%$MFT_LCN\t %mftstr% && call :Fn.5 27 %x% && echo -n %col4%%%mftstrh% && call :Fn.5 41 %x% && echo -e %col4%%48\t 0x30\t 8
set /A address=%base%+0x38 &; call :read %address% %source% ;; set /A mirstrLh=%result% &; set mirstrL=00000000%mirstrLh:~2% &; set mirstrl=%mirstrL:~-8,8%
set /A address=%base%+0x3C &; call :read %address% %source% ;; set /A mirstrHh=%result% &; set mirstrH=00000000%mirstrHh:~2% &; set mirstrh=%mirstrH:~-8,8%
set /a mirstr=0x%mirstrh%%%mirstrl% &; set /A mirstrh=%mirstr%
call Fn.4 ;; set /a x=%@retval%>>8
if not %mirstrh%<=999999999 && set mirstrh=
if %format%==DEF && echo -n -e %col3%mirror start \t%mirstr% && call :Fn.5 26 %x% && echo -n %col3%%%mirstrh% && call :Fn.5 40 %x% && echo -e %col3% 56 \t0x38 \t 8%col5%\tcluster number
#ORG#if %format%==DEF && echo -n -e %col3%mirror start \t%mirstr% && call :Fn.5 26 %x% && echo -n %col3%%%mirstrh% && call :Fn.5 40 %x% && echo -e %col3% 56 \t0x38 \t 8$[0x87]\tcluster number
if %format%==PQ && echo -n -e %col3%MFT Mirror Start Clustr %mirstr% && call :Fn.5 34 %x% && echo -n %col3%%%mirstrh% && call :Fn.5 48 %x% && echo -e %col3%%56 \t0x38 \t8
if %format%==MS && echo -n -e BPB_MirClus \t%mirstr% && call :Fn.5 26 %x% && echo -n %mirstrh% && call :Fn.5 40 %x% && echo -e 56 \t0x38 \t8
if %format%==JL && echo -n -e %col3%$MFTMirr_LCN\t %mirstr% && call :Fn.5 27 %x% && echo -n %col3%%%mirstrh% && call :Fn.5 41 %x% && echo -e %col3%%56\t 0x38\t 8
set /A address=%base%+0x40 &; call :read %address% %source% ;; set /A clusfrsh=%result%&0xffff &; set /a cluspfrs=%clusfrsh% &; if %cluspfrs%>=0x80 && set /a cluspfrs=%cluspfrs%-0x100
if %format%==DEF && if not %cluspfrs%<=-1 && echo -e -n %col4%clus/mft record %cluspfrs% \t\x20\x20%clusfrsh% \t\t 64 \t0x40 \t 1 && echo -e %col2%\tclusters/record
#ORG#if %format%==DEF && if not %cluspfrs%<=-1 && echo -e -n %col4%clus/mft record %cluspfrs% \t\x20\x20%clusfrsh% \t\t 64 \t0x40 \t 1 && echo -e $[0x78]\tclusters/record
if %format%==DEF && if %cluspfrs%<=-1 && set /a cluspfrs=-1 * %cluspfrs% &; set /a cluspfrs=1<<%cluspfrs% &; echo -e -n %col4%byte/mft record %cluspfrs% \t\x20\x20%clusfrsh% \t\t 64 \t0x40 \t 1 && echo -e %col2%\tbytes
#ORG#if %format%==DEF && if %cluspfrs%<=-1 && set /a cluspfrs=-1 * %cluspfrs% &; set /a cluspfrs=1<<%cluspfrs% &; echo -e -n %col4%byte/mft record %cluspfrs% \t\x20\x20%clusfrsh% \t\t 64 \t0x40 \t 1 && echo -e $[0x78]\t%bytes%
if %format%==PQ && echo -e %col4%Clusters per FRS \t%cluspfrs% \t\x20\x20%clusfrsh% \t\t64 \t0x40 \t1
if %format%==MS && echo -e BPB_ClusPerMft \t%cluspfrs% \t\x20\x20%clusfrsh% \t\t64 \t0x40 \t1
if %format%==JL && if not %cluspfrs%<=-1 && echo -e %col4%Clusts/$MFT_Rec. %cluspfrs%\t\x20\x20\x20%clusfrsh%\t\t 64\t 0x40\t 1
if %format%==JL && if %cluspfrs%<=-1 && set /a cluspfrs=-1 * %cluspfrs% &; set /a cluspfrs=1<<%cluspfrs% &; echo -e %col4%Bytes/$MFT_Rec.\t %cluspfrs%\t\x20\x20\x20%clusfrsh%\t\t 64\t 0x40\t 1
set /A address=%base%+0x44 &; call :read %address% %source% ;; set /A cluspibh=%result%&0xff &; set /a cluspibl=%cluspibh% &; if %cluspibl%>=0x80 && set /a cluspibl=%cluspibl%-0x100
if %format%==DEF && if not %cluspibl%<=-1 && echo -e -n %col3%clus/index buf \t%cluspibl% \t\x20\x20%cluspibh% \t\t 68 \t0x44 \t 1 && echo -e %col5%\tclusters/record
#ORG#if %format%==DEF && if not %cluspibl%<=-1 && echo -e -n %col3%clus/index buf \t%cluspibl% \t\x20\x20%cluspibh% \t\t 68 \t0x44 \t 1 && echo -e $[0x87]\tclusters/record
if %format%==DEF && if %cluspibl%<=-1 && set /a cluspibl=-1 * %cluspibl% &; set /a cluspibl=1<<%cluspibl% &; echo -e -n %col3%clus/index buf \t%cluspibl% \t\x20\x20%cluspibh% \t\t 68 \t0x44 \t 1 && echo -e %col5%\tbytes
#ORG#if %format%==DEF && if %cluspibl%<=-1 && set /a cluspibl=-1 * %cluspibl% &; set /a cluspibl=1<<%cluspibl% &; echo -e -n %col3%clus/index buf \t%cluspibl% \t\x20\x20%cluspibh% \t\t 68 \t0x44 \t 1 && echo -e $[0x87]\tbytes
if %format%==PQ && echo -e %col3%Clusters pr Index Block %cluspibl% \t\x20\x20%cluspibh% \t\t68 \t0x44 \t1
if %format%==MS && echo -e BPB_ClusPerIndx %cluspibl% \t\x20\x20%cluspibh% \t\t68 \t0x44 \t1
if %format%==JL && if not %cluspibl%<=-1 && echo -e %col3%Clusts/$MFT_Ind. %cluspibl%\t\x20\x20\x20%cluspibh%\t\t 68\t 0x44\t 1
if %format%==JL && if %cluspibl%<=-1 && set /a cluspibl=-1 * %cluspibl% &; set /a cluspibl=1<<%cluspibl% &; echo -e %col3%Bytes/$MFT_Ind.\t %cluspibl%\t\x20\x20\x20%cluspibh%\t\t 68\t 0x44\t 1
set /A address=%base%+0x48 &; call :read %address% %source% &; set /A serialhl=%result%&0xffffffff &; set /A address=%base%+0x4C &; call :read %address% %source% &; set /A serialhh=%result%&0xffffffff &; set serial=000000000000000%serialhh:~2%%%serialhl:~2% &; set serial=%serial:~-16,16%
call Fn.4 ;; set /a x=%@retval%>>8
if %format%==DEF && echo -n -e %col4%uuid \t\t%serial% && call :Fn.5 40 %x% && echo -e %col4% 72 \t0x48 \t 8
if %format%==PQ && echo -n -e %col4%Serial Number \t\t%serial% && call :Fn.5 48 %x% && echo -e %col4%%72 \t0x48 \t8
if %format%==MS && echo -n -e BS_VolID \t%serial% && call :Fn.5 40 %x% && echo -e 72 \t0x48 \t8
if %format%==JL && echo -n -e %col4%Volume_Serial\t %serial% && call :Fn.5 41 %x% && echo -e %col4%%72\t 0x48\t 8
set /A address=%base%+0x50 &; call :read %address% %source% ;; set /A checksuh=%result%&0xffffffff &; set /a checksum=%checksuh%
if %format%==DEF && echo -e %col3%checksum \t%checksum% \t\x20\x20%checksuh% \t\t 80 \t0x50 \t 4%col5%\tnot used\x20\x20\x20\x20\x20\x20\x20
#ORG#if %format%==DEF && echo -e %col3%checksum \t%checksum% \t\x20\x20%checksuh% \t\t 80 \t0x50 \t 4$[0x87]\tnot used\x20\x20\x20\x20\x20\x20\x20
if %format%==PQ && echo -e %col3%Checksum \t\t%checksum% \t\x20\x20%checksuh% \t\t80 \t0x50 \t4\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %format%==MS && echo -e BS_ChkSum \t%checksum% \t\x20\x20%checksuh% \t\t80 \t0x50 \t4
if %format%==JL && echo -e %col3%Checksum\t %checksum%\t\x20\x20\x20%checksuh%\t\t 80\t 0x50\t 4\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
endlocal
#-# Switch colors
set col5=%col3% && set col3=%col4% &; set col4=%col5% && set col5=
goto :EndOfSector0
::
:EXFATSpecific
setlocal
set format=DEF
if %format%==DEF && echo -e entry (All)\t\t\tvalue\t\x20\x20(hex)\t\toffset\t(hex)\tbyte(s) | set header2= &; echo -e %col2%%%header2%
if %format%==DEF && echo -e %col3%Jump Instruction\t\t%jump% \x20\x20\x20%jumph%\t  0\t0x0\t 3
set /A address=%base%+3 &; raw cat --skip=%address% --length=8 %source% | set oemname= &; if not exist oemname && set "oemname=N/A     "
if %format%==DEF && echo -e %col4%File System Name\t\t%oemname%\t\t  3\t0x3\t 8
if %format%==PQ && echo -e %col4%OEM name \t\t%oemname% \t\t3 \t0x3 \t8
if %format%==MS && echo -e BS_OEMname \t%oemname% \t\t3 \t0x3 \t8
set /A address=%base%+11 &; raw cat --skip=%address% --locate=\x00 --length=53 %source% > nul ;; if %@retval%==53 && if %format%==DEF && echo -e %col3%Reserved\t\t\t53 dup 0\t\t 11 \t0xB\t53 ! if %format%==DEF && echo -e %col3%Reserved\t\t\tINVALID!\t\t 11 \t0xB\t53
set /A address=%base%+0x40 &; call :read %address% %source% ;; set poffsetL=%result%
set /A address=%base%+0x44 &; call :read %address% %source% ;; set /A poffsetH=%result%&0xffffffff &; set poffseth=0000000000000000%poffsetH:~2%%%poffsetL:~2% &; set poffseth=0x%poffseth:~-16,16% &; set /a ptoffset=%poffseth% &; set /A poffseth=%poffseth%
if %poffseth%<=0xFF && if %format%==DEF && echo -e %col4%Partition Offset\t\t%ptoffset%\t\x20\x20%poffseth%\t\t 64\t0x40\t 8
if not %poffseth%<=0xFF && if %ptoffset%<=99999999 && if %format%==DEF && echo -e %col4%Partition Offset\t\t%ptoffset%\t\x20\x20%poffseth%\t 64\t0x40\t 8
if not %poffseth%<=0xFF && if not %ptoffset%<=99999999 && if %format%==DEF && echo -e %col4%Partition Offset\t\t%ptoffset%\t 64\t0x40\t 8
set /A address=%base%+0x48 &; call :read %address% %source% ;; set vollenL=%result%
set /A address=%base%+0x4C &; call :read %address% %source% ;; set /A vollenH=%result%&0xffffffff &; set vollenh=0000000000000000%vollenH:~2%%%vollenL:~2% &; set vollenh=0x%vollenh:~-16,16% &; set /a vollen=%vollenh% &; set /A vollenh=%vollenh%
if not %vollen%<=999999999 && set vollenh=
if %vollen%<=99999999 && if %format%==DEF && echo -e %col3%Volume Length\t\t\t%vollen%\t\x20\x20%vollenh%\t 72\t0x48\t 8
if not %vollen%<=99999999 && if %format%==DEF && echo -e %col3%Volume Length\t\t\t%vollen%\t 72\t0x48\t 8
set /A address=%base%+0x50 &; call :read %address% %source% ;; set /A foffseth=%result%&0xffffffff &; set foffseth=0000%foffseth:~2% &; set foffseth=0x%foffseth:~-4,4% &; set /a ftoffset=%foffseth% &; set /A foffseth=%foffseth%
if %foffseth%<=0xFF && if %format%==DEF && echo -e %col4%Fat Offset\t\t\t%ftoffset%\t\x20\x20%foffseth%\t\t 80\t0x50\t 4
if not %foffseth%<=0xFF && if %format%==DEF && echo -e %col4%Fat Offset\t\t\t%ftoffset%\t\x20\x20%foffseth%\t 80\t0x50\t 4
set /A address=%base%+0x54 &; call :read %address% %source% ;; set /A fatlenh=%result%&0xffffffff &; set fatlenh=0000%fatlenh:~2% &; set fatlenh=0x%fatlenh:~-4,4% &; set /a fatlen=%fatlenh% &; set /A fatlenh=%fatlenh%
if %fatlenh%<=0xFF && if %format%==DEF && echo -e %col3%Fat Length\t\t\t%fatlen%\t\x20\x20%fatlenh%\t\t 84\t0x54\t 4
if not %fatlenh%<=0xFF && if %format%==DEF && echo -e %col4%Fat Length\t\t\t%fatlen%\t\x20\x20%fatlenh%\t 84\t0x54\t 4
set /A address=%base%+0x58 &; call :read %address% %source% ;; set /A coffseth=%result%&0xffffffff &; set coffseth=0000%coffseth:~2% &; set coffseth=0x%coffseth:~-4,4% &; set /a choffset=%coffseth% &; set /A coffseth=%coffseth%
if %coffseth%<=0xFFF && if %format%==DEF && echo -e %col4%Cluster Heap Offset\t\t%choffset%\t\x20\x20%coffseth%\t\t 88\t0x58\t 4
if not %coffseth%<=0xFFF && if %format%==DEF && echo -e %col4%Cluster Heap Offset\t\t%choffset%\t\x20\x20%coffseth%\t 88\t0x58\t 4
set /A address=%base%+0x5C &; call :read %address% %source% ;; set /A clcounth=%result%&0xffffffff &; set clcounth=0000%clcounth:~2% &; set clcounth=0x%clcounth:~-4,4% &; set /a clcount=%clcounth%
if %format%==DEF && echo -e %col3%Cluster Count\t\t\t%clcount%\t\x20\x20%clcounth%\t 92\t0x5C\t 4
set /A address=%base%+0x60 &; call :read %address% %source% ;; set /A rdclush=%result%&0xffffffff &; set rdclush=0000%rdclush:~2% &; set rdclush=0x%rdclush:~-4,4% &; set /a rdclus=%rdclush% &; set /A rdclush=%rdclush%
if %rdclush%<=0xFF && if %format%==DEF && echo -e %col4%First Cluster of Root Directory %rdclus%\t\x20\x20%rdclush%\t\t 96\t0x60\t 4
if not %rdclush%<=0xFF && if %format%==DEF && echo -e %col4%First Cluster of Root Directory %rdclus%\t\x20\x20%rdclush%\t 96\t0x60\t 4
set /A address=%base%+0x64 &; call :read %address% %source% ;; set /A uuidh=%result%&0xffffffff &; set uuidh=00000000%uuidh:~2% &; set uuidh=0x%uuidh:~-8,8% &; set uuid=%uuidh:~2,4%-%uuidh:~6,4%
if %format%==DEF && echo -e %col3%Volume Serial Number\t\t%uuid% %uuidh%\t100\t0x64\t 4
set /A address=%base%+0x68 &; call :read %address% %source% ;; set /A fsrevh=%result%&0xffff &; set fsrevh=0000%fsrevh:~2% &; set fsrevh=0x%fsrevh:~-4,4% &; set fsrev=%fsrevh:~2,2%:%fsrevh:~4,2% &; set /A fsrevh=%fsrevh%
if %fsrevh%<=0xFF && if %format%==DEF && echo -e %col4%File System Revision\t\t%fsrev%\t\x20\x20%fsrevh%\t\t104\t0x68\t 2
if not %fsrevh%<=0xFF && if %format%==DEF && echo -e %col4%File System Revision\t\t%fsrev%\t\x20\x20%fsrevh%\t\t104\t0x68\t 2
set /A address=%base%+0x6A &; call :read %address% %source% ;; set /A volflagh=%result%&0xffff &; set volflagh=0000%volflagh:~2% &; set volflagh=0x%volflagh:~-4,4% &; set /a volflag=%volflagh%
if %format%==DEF && echo -e %col3%Volume Flags\t\t\t%volflag%\t\x20\x20%volflagh%\t106\t0x6A\t 2
set /A address=%base%+0x6C &; call :read %address% %source% ;; set /A bytpssh=%result%&0xff &; set bytpssh=00%bytpssh:~2% &; set bytpssh=0x%bytpssh:~-2,2% &; set /a bytpss=%bytpssh% &; set /A bytpssh=%bytpssh%
if %format%==DEF && echo -e %col4%Bytes Per Sector Shift\t\t%bytpss%\t\x20\x20%bytpssh%\t\t108\t0x6C\t 1
set /A address=%base%+0x6D &; call :read %address% %source% ;; set /A secpcsh=%result%&0xff &; set secpcsh=00%secpcsh:~2% &; set secpcsh=0x%secpcsh:~-2,2% &; set /a secpcs=%secpcsh% &; set /A secpcsh=%secpcsh%
if %format%==DEF && echo -e %col3%Sectors Per Cluster Shift\t%secpcs%\t\x20\x20%secpcsh%\t\t109\t0x6D\t 1
set /A address=%base%+0x6E &; call :read %address% %source% ;; set /A numfatsh=%result%&0xff &; set numfatsh=00%numfatsh:~2% &; set numfatsh=0x%numfatsh:~-2,2% &; set /a numfats=%numfatsh% &; set /A numfatsh=%numfatsh%
if %format%==DEF && echo -e %col4%Number of FATs\t\t\t%numfats%\t\x20\x20%numfatsh%\t\t110\t0x6E\t 1
set /A address=%base%+0x6F &; call :read %address% %source% ;; set /A drvselh=%result%&0xff &; set drvselh=00%drvselh:~2% &; set drvselh=0x%drvselh:~-2,2% &; set /a drvsel=%drvselh%
if %format%==DEF && echo -e %col3%Drive Select\t\t\t%drvsel%\t\x20\x20%drvselh%\t\t111\t0x6F\t 1
set /A address=%base%+0x70 &; call :read %address% %source% ;; set /A percuseh=%result%&0xff &; set percuseh=00%percuseh:~2% &; set percuseh=0x%percuseh:~-2,2% &; set /a percuse=%percuseh% &; set /A percuseh=%percuseh%
if %format%==DEF && echo -e %col4%Percent in Use\t\t\t%percuse%\t\x20\x20%percuseh%\t\t112\t0x70\t 1
set /A address=%base%+0x71 &; call :read %address% %source% ;; set reservL=%result%
set /A address=%base%+0x75 &; call :read %address% %source% ;; set /A reservH=%result%&0xffffff &; set reservh=00000000000000%reservH:~2%%%reservL:~2% &; set /A reservh=0x%reservh:~-14,14% &; set /a reserv=%reservh%
if %reserv%<=99999999 && if %format%==DEF && echo -e %col3%Reserved\t\t\t%reserv%\t\x20\x20%reservh%\t\t113\t0x71\t 7
if not %reserv%<=99999999 && if %format%==DEF && echo -e %col3%Reserved\t\t\t%reserv%\t113\t0x71\t 7
endlocal
#-# NOT switch colors
#OLD#set col5=%col3% && set col3=%col4% &; set col4=%col5% && set col5=
goto :EndOfSector0
::
:EndOfSector0
set /A address=%base%+0x1FE &; call :read %address% %source% ;; set /A magicbth=%result%&0xffff &; set magicbth=0000%magicbth:~2% &; set magicbth=0x%magicbth:~-4,4% &; set magicbyt=%magicbth:~-2,2%%%magicbth:~-4,2%
if not %pbrtype%==FAT12 if not %pbrtype%==FAT16 || if %format%==DEF && echo -e %col3%boot signature \t%magicbyt% \t\x20\x20%magicbth% \t510 \t0x1FE \t 2%col5%\talways 55h,AAh\x20
#ORG#if not %pbrtype%==FAT12 if not %pbrtype%==FAT16 || if %format%==DEF && echo -e %col3%boot signature \t%magicbyt% \t\x20\x20%magicbth% \t510 \t0x1FE \t 2$[0x87]\talways 55h,AAh\x20
if not %pbrtype%==FAT32 if not %pbrtype%==NTFS || if %format%==DEF && echo -e %col3%boot signature \t%magicbyt% \t\x20\x20%magicbth% \t510 \t0x1FE \t 2%col2%\talways 55h,AAh\x20
#ORG#if not %pbrtype%==FAT32 if not %pbrtype%==NTFS || if %format%==DEF && echo -e %col3%boot signature \t%magicbyt% \t\x20\x20%magicbth% \t510 \t0x1FE \t 2$[0x78]\talways 55h,AAh\x20
###zero \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %pbrtype%==exFAT && if %format%==DEF && echo -e %col4%Boot Signature\t\t\t%magicbyt%\t\x20\x20%magicbth:~0,6%\t510\t0x1FE\t 2\x20\x20\x20\x20
if not %pbrtype%==exFAT && if %format%==PQ && echo -e %col3%Signature \t\t%magicbyt% \t\x20\x20%magicbth% \t510 \t0x1FE \t2\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %pbrtype%==exFAT && if %format%==PQ && echo -e %col4%Boot Signature\t\t\t%magicbyt%\t\x20\x20%magicbth:~0,6%\t510\t0x1FE \t 2\x20\x20\x20\x20\x20
if %pbrtype%==exFAT && if %format%==MS && echo -e Boot Signature\t\t\t%magicbyt%\t\x20\x20%magicbth%\t510\t0x1FE\t 2
if not %pbrtype%==exFAT && if %format%==MS && echo -e BS_Signature \t%magicbyt% \t\x20\x20%magicbth:~0,6% \t510 \t0x1FE \t2
if not %pbrtype%==exFAT && if %format%==JL && echo -e %col3%Magic_bytes\t %magicbyt% \t\x20\x20\x20%magicbth% \t 510 \t 0x1FE \t 2\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
if %pbrtype%==exFAT && if %format%==JL && echo -e %col4%Boot Signature\t\t\t%magicbyt%\t\x20\x20%magicbth:~0,6%\t510\t0x1FE \t 2\x20\x20\x20\x20\x20
goto :eov
::
:eov
if %pagersts%==1 && pager on > nul ! pager off > nul
debug %debugsts% > nul
debug msg=3
endlocal && set result=%result%
goto :eof
==========================================================================
# SUB-ROUTINES
==========================================================================
:getCDtotsec
if %CDtotsec%==0 && raw cat --hex --length=1 %device%%%CDtotsec%+1 > nul || set CDtotsec= && goto :eof
if not %diffsec%>=1 if not %diff2sec%>=1 |; raw cat --hex --length=1 %device%%%CDtotsec%+1 > nul && set /A CDtotsec=%CDtotsec%+%diffsec% && set /A diff2sec=%diffsec%/2 && goto :getCDtotsec ! set /A CDtotsec=%CDtotsec%-%diff2sec% && set /A diffsec=%diff2sec%/2 && goto :getCDtotsec
setlocal && set /A lastsec=%CDtotsec%+1 &; raw cat --hex --length=1 %device%%%CDtotsec%+1 > nul && endlocal && set CDtotsec=%lastsec% ! endlocal
set diffsec= && set diff2sec=
goto :eof
::
:searchEBxx90
setlocal
if exist startsec && if %CDROM%==Y && set /A base=%startsec% * 2k ! if exist startsec && set /A base=%startsec% * 0x200 ! if exist startbyt && set /A base=%startbyt% ! set base=0
if not exist filesize && set /A length=8m ! if not %filesize%<=8m && set /A length=8m ! set /A length=%filesize%
set "mediabts=0xF0,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF"
raw cat --skip=%base% --locate=\xEB --length=1 %source% > nul && set /A skipEB=%base%+2 &; raw cat --skip=%skipEB% --locate=\x90 --length=1 %source% > nul && set EBXX90=Y && set /A skipEB=%base%+3 &; raw cat --skip=%skipEB% --length=8 %source% | set OEM= && set result=%base%
if exist OEM && if /i %OEM:~0,5%==EXFAT && set /A skipEB=%skipEB%-3+0x48 &; raw cat --skip=%skipEB% --locate=\x00 --length=8 %source% > nul &; if not %@retval%==8 && endlocal && set result=%base% && goto :eof ! set OEM=
if not %EBXX90%==Y && raw cat --skip=%base% --locate=\xE9 --length=1 %source% > nul && set EBXX90=Y && set result=%base%
if %EBXX90%==Y && set /A address=%base%+0xB &; call :read %address% %source% &; if %result%==0 && set EBXX90= && set result=
if %EBXX90%==Y && set /A address=%base%+0x13 &; call :read %address% %source% &; if %result%==0 && set result= && set /A address=%base%+0x20 &; call :read %address% %source% &; if %result%==0 && set EBXX90=
if %EBXX90%==Y && set /A address=%base%+0x15 &; call :read %address% %source% &; set /A mediabyt=%result%&0xff &; checkrange %mediabts% calc %mediabyt% && endlocal && set result=%base% && goto :eof ! set EBXX90=
set /A base=%base%+0x200 && set skipEB=
set find=xEB && set orgbase=%base% && set orglen=%length%
call :Fn.4 &; echo -n $[0x0F]Wait searching jump instruction EBxx90 in next 16MB...
:loopsearchEBxx90
raw cat --skip=%base% --locate=\%find% --length=%length% --number=1 %source% > nul &; set /A skipEB=%?% &; set baseEB=%skipEB% && set /A length=%length%+%base%-%skipEB% &; calc %skipEB% % 0x200 || set /A skipEB=%skipEB%+2 ! if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && set baseEB= && goto :loopsearchEBxx90
if exist skipEB && if "%find%"=="xEB" &; raw cat --skip=%skipEB% --locate=\x90 --length=1 %source% > nul && set /A skipEB=%skipEB%+1 && set EBXX90=Y ! if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && goto :loopsearchEBxx90
if %EBXX90%==Y &; raw cat --skip=%skipEB% --length=8 %source% | set OEM= && set /A result=%skipEB%-3
if /i %OEM:~0,5%==EXFAT && set /A skipEB=%skipEB%-3+0x48 &; raw cat --skip=%skipEB% --locate=\x00 --length=8 %source% > nul ;; set /a zeros=%@retval% &; if /i %OEM:~0,5%==EXFAT &; if not %zeros%==8 && endlocal && set result=%result% && set v=%v% && goto :eof ! if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && set EBXX90= && set OEM= && goto :loopsearchEBxx90
if exist skipEB && if "%find%"=="xE9" && set EBXX90=Y && set /A result=%skipEB%-1
if %EBXX90%==Y && set /A address=%baseEB%+0xB &; call :read %address% %source% &; set /A bytepsec=%result%&0xffff &; if %bytepsec%==0 &; if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && set EBXX90= && set OEM= && set mediabyt= && set result= && set address= && set baseEB= && set bytepsec= && goto :loopsearchEBxx90
if %EBXX90%==Y && if not /i %OEM:~0,4%==NTFS && set /A address=%baseEB%+0x13 &; call :read %address% %source% &; set /A totsect=%result%&0xffff &; if %totsect%==0 && set result= && set totsect= && set /A address=%baseEB%+0x20 &; call :read %address% %source% &; set /A totsect=%result%&0xffffffff &; if %totsect%==0 &; if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && set EBXX90= && set OEM= && set mediabyt= && set result= && set address= && set baseEB= && set totsect= && goto :loopsearchEBxx90
if %EBXX90%==Y && if /i %OEM:~0,4%==NTFS && set /A address=%baseEB%+0x28 &; call :read8 %address% %source% &; if %result%==0 &; if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && set EBXX90= && set OEM= && set mediabyt= && set result= && set address= && set baseEB= && goto :loopsearchEBxx90
if %EBXX90%==Y && set /A address=%baseEB%+0x15 &; call :read %address% %source% &; set /A mediabyt=%result%&0xff &; checkrange %mediabts% calc %mediabyt% && endlocal && set result=%baseEB% && set v=%v% && goto :eof ! if %length%>=0x200 && set /A base=%skipEB% / 0x200 * 0x200 + 0x200 && set skipEB= && set EBXX90= && set OEM= && set mediabyt= && set result= && set address= && set baseEB= && goto :loopsearchEBxx90
call :Fn.5 0 %v% &; echo -e -n \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && call Fn.5 0 %v% && call :Fn.4
if "%find%"=="xEB" && set find=xE9 && set base=%orgbase% && set length=%orglen% && echo -n $[0x0F]Wait searching jump instruction E9xxxx in next 16MB... && call Fn.4 &; set orgbase= && set orglen= && goto :loopsearchEBxx90
call :Fn.5 0 %v% &; echo -e -n \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && call Fn.5 0 %v%
if exist startsec && if %CDROM%==Y && set /A base=%startsec% * 2k ! if exist startsec && set /A base=%startsec% * 0x200 && set startsec= ! if exist startbyt && set /A base=%startbyt% && set startbyt= ! set base=0
if not exist filesize && set /A length=4m ! if not %filesize%<=4m && set /A length=4m ! set /A length=%filesize%
if not exist BLOCK && echo -e No FAT/FAT32/NTFS/exFAT Partition Boot Record EBxx90 or E9xxxx jump in %source%\n Searched %length% bytes, starting at byte %base% ! echo -e No FAT/FAT32/NTFS/exFAT Partition Boot Record EBxx90 jump in %BLOCK%\n Searched %length% bytes, starting at byte %base%
endlocal && set result= && set v=%v%
goto :eof
::
:EchoColor
#-#+ EchoColor <number 0f empty colored lines> <colorA> <colorB> <start line number>
#-# Colors must be defined before!
#-# Last two lines not always good if overwritten with echo of same color: add spaces (see DEF - Magic Byte)
setlocal
if not %grphmode%>=800 && call Fn.5 0 0
if %grphmode%>=800 && call :Fn.4 &; set /a v=%v%+1 &; call Fn.5 0 %v%
set /a c=0
:LoopEchoColor
echo -e %~2\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /a c=%c%+1
if not %c%<=%~1 && goto :SetStartline
echo -e %~3\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20
set /a c=%c%+1
if not %c%>=%~1 && goto :LoopEchoColor
:SetStartline
if not %grphmode%>=800 && call Fn.5 0 %~4
if %grphmode%>=800 && set /a v=%v%-1 &; call Fn.5 0 %v%
endlocal
goto :eof
::
:Fn.4
#-#+ Sub-routine to call Fn.4 - h is max 0-255 chars per line, position (h,v) (0,0) is 0 and (0,1) is 256 (in grub4efi text mode 20221128+30: 16 & h max +64, on some line h is always the same ?!)
#-# Use: call :Fn.4
call Fn.4 ;; set /A h=%@retval% ;; set /a v=%h%>>8 ;; set /a h=%h%&0xff
goto :eof
::
:Fn.5
call Fn.5 %~1 %~2
goto :eof
::
:read
#-#+ Function: read 4 bytes in litte endian order from disk and return as hex
#-# Use: call :read ADDRESS FILE
setlocal && set LE= && set result= &; set /A skip=%~1 &; set /a s=%@retval%
raw cat --hex --skip=%skip% --length=4 %~2 | set LE= &; if %s%<=10 && set "LE=%LE:~10,11%" ! call set "LE=%^LE:~%s%,11%" &; if "%LE:~0,1%"==" " && set "LE=%LE:~1%"
if not "%LE:~9,1%"==" " && set result=0x%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~6,1%"==" " && set result=0x%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~3,1%"==" " && set result=0x%LE:~3,2%%%LE:~0,2% ! if not "%LE:~0,1%"==" " && set result=0x%LE:~0,2%
endlocal && set result=%result%
goto :eof
::
:read8
setlocal && set LE= && set result= &; set /A skip=%~1 &; set /a s=%@retval%
raw cat --hex --skip=%skip% --length=8 %~2 | set LE= &; if %s%<=10 && set "LE=%LE:~10,24%" ! call set "LE=%^LE:~%s%,24%" &; if "%LE:~0,1%"==" " && set "LE=%LE:~1%"
if "%LE:~11,2%"=="  " &; if not "%LE:~22,2%"==" " && set result=0x%LE:~22,2%%%LE:~19,2%%%LE:~16,2%%%LE:~13,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~19,2%"==" " && set result=0x%LE:~19,2%%%LE:~16,2%%%LE:~13,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~16,2%"==" " && set result=0x%LE:~16,2%%%LE:~13,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~13,2%"==" " && set result=0x%LE:~13,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~9,2%"==" " && set result=0x%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~6,2%"==" " && set result=0x%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~3,2%"==" " && set result=0x%LE:~3,2%%%LE:~0,2% ! if not "%LE:~0,2%"==" " && set result=0x%LE:~0,2%
if not "%LE:~11,2%"=="  " && set "LE=%LE:~0,23%" &; if not "%LE:~21,2%"==" " && set result=0x%LE:~21,2%%%LE:~18,2%%%LE:~15,2%%%LE:~12,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~18,2%"==" " && set result=0x%LE:~18,2%%%LE:~15,2%%%LE:~12,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~15,2%"==" " && set result=0x%LE:~15,2%%%LE:~12,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~12,2%"==" " && set result=0x%LE:~12,2%%%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~9,2%"==" " && set result=0x%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~6,2%"==" " && set result=0x%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~3,2%"==" " && set result=0x%LE:~3,2%%%LE:~0,2% ! if not "%LE:~0,2%"==" " && set result=0x%LE:~0,2%
endlocal && set result=%result% && goto :eof
::
:mediabits
set /a bit0=%~1>>0&1 && set /a bit1=%~1>>1&1 && set /a bit2=%~1>>2&1 && set /a bit3=%~1>>3&1 && set /a bit7=%~1>>7&1
goto :eof
::
:lsspaces
setlocal && set *
set mdmem=0x300
set "file=%~1"
set numspace= && set skip=0
echo -n > (md)%mdmem%+1
pause --wait=0 "%file%" > (md)%mdmem%+1
cat --locate=%~2 (md)%mdmem%+1 > nul ;; set /a numspace=%@retval% > nul
if %numspace%==0 && endlocal && set "file=%file%" && goto :eof
:spaceloop
if %numspace%==0 && cat (md)%mdmem%+1 | set file= &; set "file=%file:~1,-1%" &; endlocal && set "file=%file%" && goto :eof
cat --skip=%skip% --locate=%~2 --number=1 (md)%mdmem%+1 > nul ;; set /A skip=%?% > nul
set /A skipmin1=%skip%-1 > nul
cat --skip=%skipmin1% --locate=\x5C --number=1 (md)%mdmem%+1 > nul ;; set /A skipmin1=%?% > nul
if %skipmin1%>=1 && set /A skipmin1=%skipmin1%+1 > nul
if %skip%==%skipmin1% && set /a numspace=%numspace%-1 > nul && set /A skip=%skip%+2 > nul && goto :spaceloop
set /A seek=%skip%+1 > nul
raw dd if=(md)%mdmem%+1 of=(md)%mdmem%+1 bs=1 skip=%skip% seek=%seek%
cat --skip=%skip% --locate=%~2 --replace=\x5C --number=1 (md)%mdmem%+1 > nul
set /a numspace=%numspace%-1 > nul
if %numspace%==0 && cat (md)%mdmem%+1 | set file= &; set "file=%file:~1,-1%" &; endlocal && set "file=%file%" && goto :eof
set /A skip=%skip%+2 > nul
goto :spaceloop
::
:help
echo PBRVIEW.G4B v0.4.1 (20250913), by deomsh
echo Function: display FAT12/16, FAT32, NTFS or exFAT Partition Boot Record
echo PBRVIEW.G4B [--start=N|--skip=n|--force=N] DEVICE|DISK|FILE [/MS|/PQ|/J|/BLUE]
echo Optional: --start=N|--skip=n|--force=N: N/n is starting Sector/ Byte (0-N/n)
echo $[] If DEVICE is not a Partition use Image-file, Disk (check CD/DVD!) or Blocklist
echo Optional: '/M[S]|/P[Q]|/J[L]' for Microsoft, PowerQuest or Jaclaz names/ colors
echo $[]          '/B[LUE]' changes default names/ colors to blue color
#ORG#echo $[] Unlock line 34 to change default colors to blue
echo Remarks:
#ORG#echo FILE can be a blocklist too; CD/DVD: blocklist only
echo If FILE contains spaces/= use escaped chars '\ '/  '\=' or double qoutes around
echo With --start=N|--force=N Sector number is in 512 byte units
echo $[] With --start=N|--skip=n|--force=N Filesystem derived from Jump-code
echo $[] First 16MB is searched for EBxx90/ E9xxxx (0x8000 sectors in 512 byte sectors)
echo $[] Without valid Media Descriptor found, search is continued/ skipped
echo In case of exFAT: switch /M[S], /P[Q] or /J[L] changes colors only
echo Text mode of Grub4dos for Uefi NOT supported, use some Graphics mode
echo Example: PBRVIEW.G4B (hd0,0)
echo Example: PBRVIEW.G4B (fd0) /MS
echo Example: PBRVIEW.G4B (rd) /PQ
echo Example: PBRVIEW.G4B --start=63 (hd0) /J
echo Example: PBRVIEW.G4B (hd0,0)/FATIMAGE.IMG
echo Example: PBRVIEW.G4B --force=2079 "(hd1,0)/Fat Image on Logical Partition.IMG"
echo Example: PBRVIEW.G4B --start=6 (hd0,0) /BLUE
echo Example: PBRVIEW.G4B --skip=0x7E00 (0xe0)0+0x800
goto :eof
